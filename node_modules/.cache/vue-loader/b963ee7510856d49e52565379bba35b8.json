{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\landing\\components\\LandingFundRaising.vue?vue&type=template&id=78979bbd&scoped=true&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\landing\\components\\LandingFundRaising.vue","mtime":1660876123000},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1660970414464},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}