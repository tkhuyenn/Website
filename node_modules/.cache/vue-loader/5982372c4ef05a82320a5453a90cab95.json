{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\ResetPassword.vue?vue&type=style&index=0&id=0de44afa&scoped=true&lang=scss&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\ResetPassword.vue","mtime":1660970151291},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660970368992},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660970411845},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\postcss-loader\\src\\index.js","mtime":1660970387688},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660970364303},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iYy1sb2dpbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjhmYzsKICBoZWlnaHQ6IDEwMHZoOwogIC5lcnJvciB7CiAgICBjb2xvcjogdmFyKC0tYmMtc3RhdHVzLWVycm9yKTsKCiAgICBmb250LXNpemU6IDEycHg7CiAgICBsaW5lLWhlaWdodDogMTsKICAgIHBhZGRpbmctdG9wOiA0cHg7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDEwMCU7CiAgICBsZWZ0OiAwOwogICAgbWFyZ2luLWJvdHRvbTogM3B4OwogIH0KICAuZm9ybSB7CiAgICB3aWR0aDogNTEycHg7CiAgICBtYXJnaW46IDQwcHggYXV0byAwOwogICAgYm94LXNoYWRvdzogMHB4IDAuNnB4IDEuOHB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMHB4IDMuMnB4IDcuMnB4IHJnYmEoMCwgMCwgMCwgMC4xMyk7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYy1iZy13aGl0ZSk7CgogICAgLmZvcm0taXRlbSB7CiAgICAgIHBhZGRpbmc6IDMwcHggMjRweDsKICAgICAgLnRpdGxlLWZvcm0gewogICAgICAgIGNvbG9yOiAjMjAxZjFlOwogICAgICB9CiAgICB9CgogICAgLmJ0biB7CiAgICAgIHBhZGRpbmc6IDEycHggMCAhaW1wb3J0YW50OwogICAgICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsKICAgICAgbGluZS1oZWlnaHQ6IDI0cHggIWltcG9ydGFudDsKICAgIH0KICAgIC5pbnB1dC1wYXNzd29yZCB7CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIH0KICAgIC5pY29uLXNob3ctcGFzc3dvcmQgewogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgdG9wOiAzcHg7CiAgICAgIHJpZ2h0OiAxNHB4OwogICAgICAuc3Bhbi1pY29uIHsKICAgICAgICBjb2xvcjogdmFyKC0tYmMtY29sb3ItZ3JleTkwKTsKICAgICAgfQogICAgfQogIH0KICAubGFiZWwtYm94IHsKICAgIG1hcmdpbi1ib3R0b206IDhweDsKICAgIGNvbG9yOiB2YXIoLS1iYy10YWJsZS10ZXh0LWNvbG9yKTsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICBmb250LXNpemU6IDE0cHg7CiAgfQogIC5pbnB1dC1wYXNzd29yZCwKICAuaW5wdXQtcGFzc3dvcmQyIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB9CiAgLmljb24tc2hvdy1wYXNzd29yZCwKICAuaWNvbi1zaG93LXBhc3N3b3JkMiB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDNweDsKICAgIHJpZ2h0OiAxNHB4OwogICAgLnNwYW4taWNvbiB7CiAgICAgIGNvbG9yOiB2YXIoLS1iYy1jb2xvci1ncmV5OTApOwogICAgfQogIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7CiAgLmJjLWxvZ2luIHsKICAgIC5mb3JtIHsKICAgICAgd2lkdGg6IDkwJTsKICAgICAgbWFyZ2luOiAyMHB4IGF1dG8gMDsKICAgICAgYm94LXNoYWRvdzogMHB4IDAuM3B4IDAuOXB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMHB4IDEuNnB4IDMuNnB4IHJnYmEoMCwgMCwgMCwgMC4xMyk7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgbWF4LXdpZHRoOiA1MTJweDsKCiAgICAgIC5pbnB1dC1jb2RlIHsKICAgICAgICBtYXJnaW4tbGVmdDogMDsKICAgICAgfQoKICAgICAgLmZvcm0taXRlbSB7CiAgICAgICAgcGFkZGluZzogMjBweDsKICAgICAgICAudGl0bGUtZm9ybSB7CiAgICAgICAgICBmb250LXNpemU6IDIwcHg7CiAgICAgICAgICBsaW5lLWhlaWdodDogbm9ybWFsOwogICAgICAgICAgY29sb3I6ICMwYTBiMGQ7CiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4OwogICAgICAgIH0KICAgICAgfQoKICAgICAgLmxhYmVsLWJveCB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4OwogICAgICAgIGNvbG9yOiAjMGEwYjBkOwogICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICB9CgogICAgICAudGV4dC1iYXNlIHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICM1YjYxNmU7CiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICB9CgogICAgICAuaWNvbiB7CiAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgfQoKICAgICAgLy8gbGFiZWwubm8tcmVxdWlyZS1sYWJlbCB7CiAgICAgIC8vICAgZm9udC1zaXplOiAxNHB4OwogICAgICAvLyB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappingsfile":"ResetPassword.vue","sourceRoot":"src/modules/auth/views","sourcesContent":["<template>\r\n  <div class=\"bc-login\">\r\n    <header-login />\r\n    <div class=\"form\">\r\n      <el-form class=\"form-item\" :model=\"form\" :rules=\"rules\" ref=\"form-login\">\r\n        <div class=\"text-3xl text-semibold text-center mb-2 title-form\">{{ $t('resetPass.title') }}</div>\r\n        <div class=\"label-box\">\r\n          <label for=\"\">{{ $t('placeholder.password') }}</label>\r\n        </div>\r\n        <el-form-item prop=\"password\" class=\"input-password\">\r\n          <el-popover placement=\"right\" width=\"auto\" trigger=\"manual\" v-model=\"visible\" popper-class=\"popper-validate-password\">\r\n            <template>\r\n              <div class=\"check-password\">\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validate.length\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.length') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validate.lowercase\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.lowercase') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validate.uppercase\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.uppercase') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validate.number\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.number') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validate.specialCharacter\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.specialCharacter') }}</span>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <el-input\r\n              :type=\"showPass == true ? 'text' : 'password'\"\r\n              slot=\"reference\"\r\n              style=\"border-clor: red\"\r\n              :placeholder=\"$t('placeholder.password')\"\r\n              v-model=\"form.password\"\r\n              @focus=\"visible = true\"\r\n              @blur=\"visible = false\"\r\n            />\r\n          </el-popover>\r\n          <!-- <el-input :placeholder=\"$t('placeholder.password')\" type=\"password\" v-model=\"form.password\" /> -->\r\n          <span class=\"icon-show-password\" @click=\"showPass = !showPass\">\r\n            <base-icon :icon=\"showPass == true ? 'icon-eye-off' : 'icon-eye'\" size=\"22\" />\r\n          </span>\r\n        </el-form-item>\r\n        <div class=\"label-box\">\r\n          <label for=\"\">{{ $t('placeholder.repassword') }}</label>\r\n        </div>\r\n        <el-form-item prop=\"repassword\" class=\"input-password2\">\r\n          <el-popover placement=\"right\" width=\"auto\" trigger=\"manual\" v-model=\"visibleRe\" popper-class=\"popper-validate-password\">\r\n            <template>\r\n              <div class=\"check-password\">\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validateRepassword.length\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.length') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validateRepassword.lowercase\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.lowercase') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validateRepassword.uppercase\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.uppercase') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validateRepassword.number\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.number') }}</span>\r\n                </div>\r\n                <div class=\"be-flex align-center check-item\">\r\n                  <base-icon v-if=\"validateRepassword.specialCharacter\" icon=\"icon-tick\" size=\"16\" />\r\n                  <base-icon v-else icon=\"icon-x\" size=\"16\" />\r\n                  <span class=\"text-xs\" style=\"padding-left: 8px; color: #5b616e\">{{ $t('validate.specialCharacter') }}</span>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <el-input\r\n              slot=\"reference\"\r\n              class=\"input-password\"\r\n              :type=\"showPass2 == true ? 'text' : 'password'\"\r\n              :placeholder=\"$t('placeholder.repassword')\"\r\n              v-model=\"form.repassword\"\r\n              @focus=\"visibleRe = true\"\r\n              @blur=\"visibleRe = false\"\r\n              @change=\"handleChangeRepassword\"\r\n            />\r\n          </el-popover>\r\n          <!-- <el-input class=\"input-password\" type=\"password\" :placeholder=\"$t('placeholder.repassword')\" v-model=\"form.repassword\" /> -->\r\n          <span class=\"icon-show-password2\" @click=\"showPass2 = !showPass2\">\r\n            <base-icon :icon=\"showPass2 == true ? 'icon-eye-off' : 'icon-eye'\" size=\"22\" />\r\n          </span>\r\n          <span class=\"small-err\" v-if=\"!isMatchPassword\">{{ $t('validate.password-correct') }}</span>\r\n        </el-form-item>\r\n        <el-button :loading=\"isLoading\" :class=\"getDisableBtn ? 'btn--disabled' : null\" class=\"btn w-100 is-none-border cursor\" @click=\"handleResetPass\"\r\n          >{{ $t('resetPass.submit') }}\r\n        </el-button>\r\n        <!-- <button :class=\"getDisableBtn ? 'btn--disabled' : null\" type=\"button\" class=\"btn is-none-border w-100 cursor\" @click=\"handleResetPass\">{{ $t('resetPass.submit') }}</button> -->\r\n      </el-form>\r\n    </div>\r\n    <!-- <language :isReload=\"false\" @changeLanguage=\"handleChangeLanguage\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import VueRecaptcha from 'vue-recaptcha'\r\n  import HeaderLogin from '../components/HeaderLogin.vue'\r\n  import Language from '../components/Language.vue'\r\n  import { namespace } from 'vuex-class'\r\n\r\n  import getRepository from '@/services'\r\n  import { AuthRepository } from '@/services/repositories/auth'\r\n  import { ActivityRepository } from '@/services/repositories/activity'\r\n\r\n  import { Component, Vue, Watch } from 'vue-property-decorator'\r\n  import includes from 'lodash/includes'\r\n  import trim from 'lodash/trim'\r\n  const apiAuth: AuthRepository = getRepository('auth')\r\n  const apiActivity: ActivityRepository = getRepository('activity')\r\n\r\n  interface FormLogin {\r\n    password: string\r\n    repassword: string\r\n    checkPassWord: boolean\r\n  }\r\n  const bcAuth = namespace('beAuth')\r\n\r\n  @Component({ components: { VueRecaptcha, HeaderLogin, Language } })\r\n  export default class ResetPassword extends Vue {\r\n    @bcAuth.Action('setToken') setToken!: (data: Record<string, any>) => Promise<any>\r\n    @bcAuth.Getter('isLogin') isLogin!: boolean\r\n    @bcAuth.Action('logout') logout!: () => Promise<void>\r\n    isMatchPassword = true\r\n    showPass = false\r\n    showPass2 = false\r\n    language = 'en'\r\n    form: FormLogin = {\r\n      repassword: '',\r\n      password: '',\r\n      checkPassWord: false\r\n    }\r\n    isLoading = false\r\n    visible = false\r\n    visibleRe = false\r\n    validate: Record<string, boolean> = {\r\n      length: false,\r\n      number: false,\r\n      uppercase: false,\r\n      lowercase: false,\r\n      specialCharacter: false\r\n    }\r\n    validateRepassword: Record<string, boolean> = {\r\n      length: false,\r\n      number: false,\r\n      uppercase: false,\r\n      lowercase: false,\r\n      specialCharacter: false\r\n    }\r\n    selectLanguage = ''\r\n\r\n    optionLanguage: Array<Record<string, any>> = [\r\n      {\r\n        id: 1,\r\n        lang: 'en'\r\n      },\r\n      {\r\n        id: 2,\r\n        lang: 'vi'\r\n      }\r\n    ]\r\n\r\n    regLow = /(?=.*[a-z])/g\r\n    regUp = /(?=.*[A-Z])/g\r\n    regNumber = /(?=.*[0-9])/g\r\n    regSpecial = /(?=.*[!@#$%^&*()_=+{}:;\"'/?><.,-])/g\r\n\r\n    rules: Record<string, any> = {\r\n      email: [\r\n        {\r\n          required: true,\r\n          message: this.$t('login.wrong-email'),\r\n          trigger: 'blur'\r\n        },\r\n        { type: 'email', message: this.$t('login.wrong-email-type'), trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        {\r\n          pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n          message: this.$t('signup.checkpass'),\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    }\r\n    @Watch('form.password') watchPassword(pass: string): void {\r\n      // console.log('length', pass.length >= 8)\r\n      // console.log('number', this.regNumber.test(pass))\r\n      // console.log('regLow', this.regLow.test(pass))\r\n      // console.log('regUp', this.regUp.test(pass))\r\n      // console.log('regSpecial', this.regSpecial.test(pass))\r\n\r\n      this.validate.length = pass.length >= 8\r\n      this.validate.number = this.regNumber.test(pass)\r\n      this.validate.uppercase = this.regUp.test(pass)\r\n      this.validate.lowercase = this.regLow.test(pass)\r\n      this.validate.specialCharacter = this.regSpecial.test(pass)\r\n\r\n      if (\r\n        this.validate.length == false ||\r\n        this.validate.number == false ||\r\n        this.validate.uppercase == false ||\r\n        this.validate.lowercase == false ||\r\n        this.validate.specialCharacter == false\r\n      ) {\r\n        console.log('1')\r\n        this.form.checkPassWord = true\r\n      } else {\r\n        // @ts-ignore\r\n        this.$refs['form-login']?.clearValidate()\r\n        this.form.checkPassWord = false\r\n        this.form.checkPassWord = false\r\n      }\r\n      console.log('check', this.form.checkPassWord)\r\n    }\r\n    // @Watch('form.password') watchPassword(pass: string): void {\r\n    //   this.isMatchPassword = !(this.form.password === this.form.repassword && this.form.repassword)\r\n    //   this.validate.length = pass.length >= 8\r\n    //   this.validate.number = this.regNumber.test(pass)\r\n    //   this.validate.uppercase = this.regUp.test(pass)\r\n    //   this.validate.lowercase = this.regLow.test(pass)\r\n    //   this.validate.specialCharacter = this.regSpecial.test(pass)\r\n    // }\r\n    @Watch('form.repassword') watchRePassword(pass: string): void {\r\n      //@ts-ignore\r\n      this.$refs['form-login']?.fields.find(f => f.prop == 'repassword').clearValidate()\r\n      this.isMatchPassword = !(this.form.password !== this.form.repassword)\r\n      this.validateRepassword.length = pass.length >= 8\r\n      this.validateRepassword.number = this.regNumber.test(pass)\r\n      this.validateRepassword.uppercase = this.regUp.test(pass)\r\n      this.validateRepassword.lowercase = this.regLow.test(pass)\r\n      this.validateRepassword.specialCharacter = this.regSpecial.test(pass)\r\n    }\r\n\r\n    get getDisableBtn(): boolean {\r\n      const isValidatePass = Object.values(this.validate).every(item => item)\r\n      const isValidateRePass = Object.values(this.validateRepassword).every(item => item)\r\n      return !(this.form.password && trim(this.form.password) === this.form.repassword && trim(this.form.repassword) && isValidatePass && isValidateRePass)\r\n    }\r\n\r\n    created(): void {\r\n      if (this.isLogin) {\r\n        this.logout()\r\n      }\r\n      this.language = window.localStorage.getItem('bc-lang')!\r\n      this.selectLanguage = this.language\r\n    }\r\n\r\n    handleChangeRepassword(pass: string): void {\r\n      if (pass === '') {\r\n        this.isMatchPassword = true\r\n      }\r\n    }\r\n\r\n    handleChangeLanguage(): void {\r\n      //@ts-ignore\r\n      this.$refs['form-login']?.resetFields()\r\n    }\r\n    handleResetPass(): void {\r\n      if (this.getDisableBtn) {\r\n        return\r\n      }\r\n      //@ts-ignore\r\n      this.$refs['form-login']?.validate(async valid => {\r\n        if (valid) {\r\n          let message: any = ''\r\n          this.isLoading = true\r\n          const reason = this.$route.query.reason\r\n          const data = {\r\n            email: this.$route.query.email,\r\n            verificationCode: this.$route.query.code,\r\n            password: this.$options.filters?.encryptPassword(this.form.password),\r\n            type: 'EMAIL'\r\n          }\r\n          apiAuth\r\n            .resetPassword(data, 0, true)\r\n            .then(async res => {\r\n              if (res) {\r\n                await this.setToken(res)\r\n                // await apiActivity.createLogLogin({ sourceType: 'WEB' })\r\n                message = this.$t('notify.pass-reset-1')\r\n                this.$message.success({ message, duration: 5000 })\r\n                this.$router.push({ name: 'Wallet' })\r\n              } else {\r\n                message = this.$t('notify.pass-reset-2')\r\n                this.$message.success({ message, duration: 5000 })\r\n                setTimeout(() => {\r\n                  this.$router.push({ name: 'login' })\r\n                }, 1000)\r\n              }\r\n              this.isLoading = false\r\n            })\r\n            .catch((error: any) => {\r\n              this.isLoading = false\r\n              let message: any = ''\r\n              const { config, data } = error.response\r\n              //TH1: forgot => verify => reset\r\n              if (data.status === 'EXPIRED_VERIFICATION' && reason === 'FORGET_PASSWORD' && includes(config.url, 'reset-pass')) {\r\n                message = this.$t('notify.reset-pass-expired')\r\n                this.$message.error({ message, duration: 5000 })\r\n                this.$router.push({ name: 'forgot-password' })\r\n              }\r\n\r\n              //TH2: click vào link\r\n              if (data.status === 'EXPIRED_VERIFICATION' && reason === 'UNLOCK_USER' && includes(config.url, 'reset-pass')) {\r\n                message = this.$t('notify.reset-pass-invalid-click-url')\r\n                this.$message.error({ message, duration: 5000 })\r\n                // this.$router.push({ name: 'forgot-password' })\r\n              }\r\n              if (data.status === 'INVALID_VERIFICATION' && reason === 'FORGET_PASSWORD' && includes(config.url, 'reset-pass')) {\r\n                message = this.$t('notify.reset-pass-invalid')\r\n                this.$message.error({ message, duration: 5000 })\r\n                this.$router.push({ name: 'forgot-password' })\r\n              }\r\n              if (data.status === 'INVALID_VERIFICATION' && reason === 'UNLOCK_USER' && includes(config.url, 'reset-pass')) {\r\n                message = this.$t('notify.reset-pass-invalid-click-url')\r\n                this.$message.error({ message, duration: 5000 })\r\n              }\r\n            })\r\n        }\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .bc-login {\r\n    background-color: #f6f8fc;\r\n    height: 100vh;\r\n    .error {\r\n      color: var(--bc-status-error);\r\n\r\n      font-size: 12px;\r\n      line-height: 1;\r\n      padding-top: 4px;\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 0;\r\n      margin-bottom: 3px;\r\n    }\r\n    .form {\r\n      width: 512px;\r\n      margin: 40px auto 0;\r\n      box-shadow: 0px 0.6px 1.8px rgba(0, 0, 0, 0.1), 0px 3.2px 7.2px rgba(0, 0, 0, 0.13);\r\n      border-radius: 8px;\r\n      background-color: var(--bc-bg-white);\r\n\r\n      .form-item {\r\n        padding: 30px 24px;\r\n        .title-form {\r\n          color: #201f1e;\r\n        }\r\n      }\r\n\r\n      .btn {\r\n        padding: 12px 0 !important;\r\n        font-size: 16px !important;\r\n        line-height: 24px !important;\r\n      }\r\n      .input-password {\r\n        position: relative;\r\n      }\r\n      .icon-show-password {\r\n        cursor: pointer;\r\n        position: absolute;\r\n        top: 3px;\r\n        right: 14px;\r\n        .span-icon {\r\n          color: var(--bc-color-grey90);\r\n        }\r\n      }\r\n    }\r\n    .label-box {\r\n      margin-bottom: 8px;\r\n      color: var(--bc-table-text-color);\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n    }\r\n    .input-password,\r\n    .input-password2 {\r\n      position: relative;\r\n    }\r\n    .icon-show-password,\r\n    .icon-show-password2 {\r\n      cursor: pointer;\r\n      position: absolute;\r\n      top: 3px;\r\n      right: 14px;\r\n      .span-icon {\r\n        color: var(--bc-color-grey90);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .bc-login {\r\n      .form {\r\n        width: 90%;\r\n        margin: 20px auto 0;\r\n        box-shadow: 0px 0.3px 0.9px rgba(0, 0, 0, 0.1), 0px 1.6px 3.6px rgba(0, 0, 0, 0.13);\r\n        border-radius: 4px;\r\n        max-width: 512px;\r\n\r\n        .input-code {\r\n          margin-left: 0;\r\n        }\r\n\r\n        .form-item {\r\n          padding: 20px;\r\n          .title-form {\r\n            font-size: 20px;\r\n            line-height: normal;\r\n            color: #0a0b0d;\r\n            margin-bottom: 24px;\r\n          }\r\n        }\r\n\r\n        .label-box {\r\n          margin-bottom: 8px;\r\n          color: #0a0b0d;\r\n          font-weight: 400;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .text-base {\r\n          font-size: 14px;\r\n          color: #5b616e;\r\n          text-align: center;\r\n          display: block;\r\n        }\r\n\r\n        .icon {\r\n          display: none;\r\n        }\r\n\r\n        // label.no-require-label {\r\n        //   font-size: 14px;\r\n        // }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}