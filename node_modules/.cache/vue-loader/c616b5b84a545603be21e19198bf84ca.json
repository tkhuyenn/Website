{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\popup\\PopupVerifiedSms.vue?vue&type=style&index=0&id=04b7a751&scoped=true&lang=scss&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\popup\\PopupVerifiedSms.vue","mtime":1660123011575},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660970368992},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660970411845},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\postcss-loader\\src\\index.js","mtime":1660970387688},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660970364303},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnRuIHsKICBwYWRkaW5nOiAxMnB4IDAgIWltcG9ydGFudDsKICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsKICBsaW5lLWhlaWdodDogMjRweCAhaW1wb3J0YW50Owp9Ci50aXRsZS1mb3JtIHsKICBjb2xvcjogIzIwMWYxZTsKICBtYXJnaW4tYm90dG9tOiAzcHg7CiAgd29yZC1icmVhazogYnJlYWstd29yZDsKfQouaW5wdXQtY29kZSB7CiAgbWFyZ2luLXRvcDogMTdweDsKfQouYnRuLXN1Ym1pdCB7CiAgbWFyZ2luLWJvdHRvbTogMjRweDsKfQoudGV4dC1kaXNjcmlwdCB7CiAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7Cn0KLmJ0bi10aGVtZSB7CiAgYmFja2dyb3VuZDogdmFyKC0tYmMtdGFiLWFjdGl2ZSk7CiAgJjpmb2N1cyB7CiAgICBjb2xvcjogdmFyKC0tYmMtY29sb3Itd2hpdGUpOwogIH0KfQouYnRuLXRoZW1lOmhvdmVyIHsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHZhcigtLWJjLWNvbG9yLXdoaXRlKTsKICBiYWNrZ3JvdW5kOiB2YXIoLS1iYy10aGVtZS1wcmltYXJ5LWdyYWRpZW50LWhvdmVyKTsKfQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkgewogIDo6di1kZWVwLnBvcHVwLXZlcmlmeXsKICAgIC5lbC1kaWFsb2d7CiAgICAgIHdpZHRoOiAzMzVweCAhaW1wb3J0YW50OwogICAgICAmX19oZWFkZXJ7CiAgICAgICAgLnRpdGxlewogICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4OwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["PopupVerifiedSms.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopupVerifiedSms.vue","sourceRoot":"src/modules/setting/components/popup","sourcesContent":["<template>\r\n  <base-popup name=\"popup-verified-sms\" class=\"popup-verify\" width=\"480px\" :open=\"handleOpen\" :close=\"handleClose\" :isShowFooter=\"false\">\r\n    <div slot=\"title\">\r\n      <span>{{ $t('popup.title.verification') }} </span>\r\n    </div>\r\n    <div class=\"content\">\r\n      <h3 class=\"text-2xl text-center text-semibold title-form\">{{ $t('verified.titleContent2') }}</h3>\r\n      <div class=\"be-flex verify-code\">\r\n        <base-icon icon=\"verify-phone\" size=\"80\"></base-icon>\r\n        <div class=\"ml-1 w-100 input-code\">\r\n          <el-form :model=\"form\" :rules=\"rules\" ref=\"form-verify\" @submit.prevent.native=\"handleSubmit\">\r\n            <el-form-item prop=\"code\" :label=\"`${$t('verify.label')}`\" class=\"no-require-label\">\r\n              <el-input type=\"text\" v-model.trim=\"form.code\" maxlength=\"6\" :placeholder=\"`${$t('verify.placeholder')}`\" />\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n      <el-button :loading=\"isLoading\" class=\"btn w-100 is-none-border cursor btn-submit btn-theme\" @click=\"handleSubmit\">{{ $t('verify.submit') }} </el-button>\r\n      <div class=\"text-base be-flex jc-space-center mt-24 mb-24 text-grey-130 text-discript\">\r\n        {{ $t('verify.question') }} &nbsp;<span class=\"text-hyperlink text-semibold cursor\" @click=\"handleResendCode\"> {{ $t('verify.re-send') }} </span>\r\n      </div>\r\n      <!-- <div style=\"padding-bottom: 24px\" class=\"text-base be-flex jc-space-center mt-12 text-grey-130 note-style use-voice-call\">\r\n        <span class=\"text-hyperlink text-semibold cursor\" @click=\"handleCallSendCode\"> {{ $t('verify.voice-call') }}</span>\r\n      </div> -->\r\n    </div>\r\n  </base-popup>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import { Component, Mixins, Prop, Watch } from 'vue-property-decorator'\r\n  import PopupMixin from '@/mixins/popup'\r\n\r\n  import getRepository from '@/services'\r\n  import WalletRepository from '@/services/repositories/wallet'\r\n  import { SettingRepository } from '@/services/repositories/setting'\r\n  import { AuthRepository } from '@/services/repositories/auth'\r\n  import debounce from 'lodash/debounce'\r\n  import { namespace } from 'vuex-class'\r\n  import { IUser } from '@/interface'\r\n  import includes from 'lodash/includes'\r\n  const bcAuth = namespace('beAuth')\r\n  const apiAuth: AuthRepository = getRepository('auth')\r\n  const api: SettingRepository = getRepository('setting')\r\n  @Component\r\n  export default class PopupVerifySms extends Mixins(PopupMixin) {\r\n    @bcAuth.State('user') user!: IUser\r\n    @Prop({ required: true, type: Object, default: () => ({}) }) info!: Record<string, any>\r\n\r\n    form: Record<string, any> = {\r\n      code: ''\r\n    }\r\n    isLoading = false\r\n    success: any = 0\r\n    rules: Record<string, any> = {\r\n      code: [\r\n        {\r\n          required: true,\r\n          message: this.$t('verify.wrong-code'),\r\n          trigger: 'blur'\r\n        },\r\n        {\r\n          len: 6,\r\n          message: this.$t('changePassword.errorLengthVerificationCode'),\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    }\r\n    get getDisableBtn(): boolean {\r\n      return this.form.code.length !== 6\r\n    }\r\n\r\n    @Watch('form.code') watchCode(code: string): void {\r\n      if (code) {\r\n        //@ts-ignore\r\n        this.$refs['form-verify']?.clearValidate()\r\n      }\r\n    }\r\n\r\n    // debounce chan doble click\r\n    debounceFilter = debounce((nameAction: any) => {\r\n      if (nameAction == 'handleResendCode') {\r\n        this.resendCode()\r\n      }\r\n      if (nameAction == 'handleSubmit') {\r\n        this.submit()\r\n      }\r\n    }, 400)\r\n    handleResendCode(): void {\r\n      this.debounceFilter('handleResendCode')\r\n    }\r\n    pushNotifi = false\r\n    async resendCode(): Promise<void> {\r\n      this.pushNotifi = true\r\n      this.handleSendCode()\r\n    }\r\n    handleCallSendCode(): void {\r\n      api.getProfile().then((res: any) => {\r\n        const data = {\r\n          country: res.data.country,\r\n          phone: this.info.phone,\r\n          countryCode: res.data.countryCode,\r\n          email: this.info.email,\r\n          phoneCall: true\r\n        }\r\n        let message: any = ''\r\n        apiAuth.verifyPhone(data).then(() => {\r\n          message = this.$t('notify.send-code-voice')\r\n          this.$message.success({ message, duration: 5000 })\r\n        })\r\n      })\r\n    }\r\n    handleReset(): void {\r\n      //@ts-ignore\r\n      this.$refs['form-verify']?.clearValidate()\r\n      this.form = {\r\n        code: ''\r\n      }\r\n    }\r\n    handleClose(): void {\r\n      this.handleReset()\r\n    }\r\n\r\n    async handleSendCode(): Promise<void> {\r\n      try {\r\n        const data = {\r\n          email: this.info.email,\r\n          type: 'SMS',\r\n          reason: ''\r\n        }\r\n        await apiAuth.resendCode(data).then(() => {\r\n          if (this.pushNotifi) {\r\n            let message: any = ''\r\n            message = this.$t('notify.send-code')\r\n            this.$message.success({ message, duration: 5000 })\r\n          }\r\n        })\r\n      } catch (error: any) {\r\n        let message: any = ''\r\n        const { config, data } = error.response\r\n        if (data.status === 'USER_BLOCKED' && includes(config.url, 'resendCode')) {\r\n          message = this.$t('notify.user-blocked-resend-code')\r\n          this.$message.error({ message, duration: 5000 })\r\n        }\r\n      }\r\n      this.pushNotifi = false\r\n    }\r\n\r\n    handleOpen(): void {\r\n      this.handleSendCode()\r\n    }\r\n\r\n    handleSubmit(): void {\r\n      //@ts-ignore\r\n      this.$refs['form-verify']?.validate(valid => {\r\n        if (valid) {\r\n          this.debounceFilter('handleSubmit')\r\n        }\r\n      })\r\n    }\r\n    async submit(): Promise<void> {\r\n      try {\r\n        this.isLoading = true\r\n        const data = {\r\n          email: this.info.email,\r\n          verificationCode: this.form.code,\r\n          type: 'SMS'\r\n        }\r\n        apiAuth\r\n          .verifyCode('CODE', { ...data })\r\n          .then(() => {\r\n            this.setOpenPopup({\r\n              popupName: 'popup-verified-sms',\r\n              isOpen: false\r\n            })\r\n            this.isLoading = false\r\n            this.$emit('follow2fa')\r\n          })\r\n          .catch(err => {\r\n            this.isLoading = false\r\n          })\r\n      } catch (error) {\r\n        this.isLoading = false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .btn {\r\n    padding: 12px 0 !important;\r\n    font-size: 16px !important;\r\n    line-height: 24px !important;\r\n  }\r\n  .title-form {\r\n    color: #201f1e;\r\n    margin-bottom: 3px;\r\n    word-break: break-word;\r\n  }\r\n  .input-code {\r\n    margin-top: 17px;\r\n  }\r\n  .btn-submit {\r\n    margin-bottom: 24px;\r\n  }\r\n  .text-discript {\r\n    margin-top: 0px !important;\r\n  }\r\n  .btn-theme {\r\n    background: var(--bc-tab-active);\r\n    &:focus {\r\n      color: var(--bc-color-white);\r\n    }\r\n  }\r\n  .btn-theme:hover {\r\n    border: none;\r\n    color: var(--bc-color-white);\r\n    background: var(--bc-theme-primary-gradient-hover);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    ::v-deep.popup-verify{\r\n      .el-dialog{\r\n        width: 335px !important;\r\n        &__header{\r\n          .title{\r\n            font-weight: 600;\r\n            font-size: 16px;\r\n            line-height: 24px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}