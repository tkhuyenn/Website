{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\mobileSetting\\MobileKyc.vue?vue&type=template&id=0a800a59&scoped=true&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\mobileSetting\\MobileKyc.vue","mtime":1660123011569},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1660970414464},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}