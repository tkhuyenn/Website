{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\marketplace\\home\\components\\detail-project\\DetailBlock.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\marketplace\\home\\components\\detail-project\\DetailBlock.vue","mtime":1660970151632},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wLCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgZmlsdGVyIGZyb20gJ2xvZGFzaC9maWx0ZXInCmltcG9ydCB7IG5hbWVzcGFjZSB9IGZyb20gJ3Z1ZXgtY2xhc3MnCmNvbnN0IGJjTWFya2V0SG9tZSA9IG5hbWVzcGFjZSgnYmNNYXJrZXRQcmltYXJ5SG9tZScpCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGV0YWlsQmxvY2sgZXh0ZW5kcyBWdWUgewogIEBQcm9wKHsgcmVxdWlyZWQ6IHRydWUsIHR5cGU6IE51bWJlciwgZGVmYXVsdDogMCB9KSBpZCE6IG51bWJlcgogIEBQcm9wKHsgcmVxdWlyZWQ6IHRydWUsIHR5cGU6IEFycmF5LCBkZWZhdWx0OiAoKSA9PiBbXSB9KSBibG9ja0xpc3QhOiBBcnJheTxSZWNvcmQ8c3RyaW5nLCBhbnk+PgogIEBiY01hcmtldEhvbWUuU3RhdGUoJ2Jsb2NrTWV0YScpIGJsb2NrTWV0YSE6IEFycmF5PFJlY29yZDxzdHJpbmcsIGFueT4+CgogIGdldE5hbWUobmFtZTogc3RyaW5nKTogYW55IHsKICAgIGNvbnN0IGxhbmd1YWdlID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdiYy1sYW5nJykhCiAgICBpZiAodGhpcy5ibG9ja0xpc3QubGVuZ3RoKSB7CiAgICAgIGNvbnN0IGVsbSA9IGZpbHRlcih0aGlzLmJsb2NrTWV0YSwgbWV0YSA9PiB7CiAgICAgICAgcmV0dXJuIG1ldGEudmFsdWUgPT09IG5hbWUKICAgICAgfSlbMF0KICAgICAgY29uc3QgcGFyc2VFbG0gPSBKU09OLnBhcnNlKGVsbS5kZXNjcmlwdGlvbikKICAgICAgcmV0dXJuIHBhcnNlRWxtW2xhbmd1YWdlXQogICAgfQogIH0KfQo="},{"version":3,"sources":["DetailBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DetailBlock.vue","sourceRoot":"src/modules/marketplace/home/components/detail-project","sourcesContent":["<template>\r\n  <div :id=\"id\" class=\"detail-block\">\r\n    <h3 class=\"header-5 mb-24 text-semibold text-title\">\r\n      {{ $t('market-detail.title-block') }}\r\n    </h3>\r\n    <div class=\"be-flex wrap-block\">\r\n      <div v-for=\"item in blockList\" :key=\"item.id\" class=\"block-item\">\r\n        <img :src=\"item.avatar\" :alt=\"item.avatar\" />\r\n        <div class=\"content\">\r\n          <h4 class=\"body-large text-medium\">{{ item.blockName }}</h4>\r\n          <div class=\"be-flex item\" v-for=\"blockItem in item.blockMetaData\" :key=\"blockItem.id\">\r\n            <span class=\"title body-small\">{{ getName(blockItem.metaName) }}</span>\r\n            <span class=\"value\">{{ blockItem.metaValue }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import { Component, Prop, Vue } from 'vue-property-decorator'\r\n  import filter from 'lodash/filter'\r\n  import { namespace } from 'vuex-class'\r\n  const bcMarketHome = namespace('bcMarketPrimaryHome')\r\n  @Component\r\n  export default class DetailBlock extends Vue {\r\n    @Prop({ required: true, type: Number, default: 0 }) id!: number\r\n    @Prop({ required: true, type: Array, default: () => [] }) blockList!: Array<Record<string, any>>\r\n    @bcMarketHome.State('blockMeta') blockMeta!: Array<Record<string, any>>\r\n\r\n    getName(name: string): any {\r\n      const language = window.localStorage.getItem('bc-lang')!\r\n      if (this.blockList.length) {\r\n        const elm = filter(this.blockMeta, meta => {\r\n          return meta.value === name\r\n        })[0]\r\n        const parseElm = JSON.parse(elm.description)\r\n        return parseElm[language]\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .detail-block {\r\n    margin-top: 32px;\r\n    padding-bottom: 32px;\r\n    border-bottom: 1px solid #dbdbdb;\r\n    .wrap-block {\r\n      flex-wrap: wrap;\r\n      .block-item {\r\n        box-shadow: 0px 1.2px 3.6px rgba(0, 0, 0, 0.1), 0px 6.4px 14.4px rgba(0, 0, 0, 0.13);\r\n        border-radius: 8px;\r\n        width: calc(1 / 3 * 100% - (1 - 1 / 3) * 24px);\r\n        margin: 24px 24px 0 0;\r\n\r\n        img {\r\n          width: 100%;\r\n          height: auto;\r\n        }\r\n        .content {\r\n          padding: 24px;\r\n          h4 {\r\n            margin-bottom: 16px;\r\n          }\r\n          .item {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-bottom: 8px;\r\n            .title {\r\n              color: var(--bc-text-discript);\r\n            }\r\n            .value {\r\n              font-weight: 600;\r\n            }\r\n          }\r\n          .item:last-child {\r\n            margin-bottom: 0;\r\n          }\r\n        }\r\n      }\r\n      .block-item:nth-child(-n + 3) {\r\n        margin-top: 0;\r\n      }\r\n      .block-item:nth-child(3n) {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}