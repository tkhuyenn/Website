{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\VerifyPhone.vue?vue&type=style&index=0&id=3a005cae&scoped=true&lang=scss&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\VerifyPhone.vue","mtime":1660970151299},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660970368992},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660970411845},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\postcss-loader\\src\\index.js","mtime":1660970387688},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660970364303},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJjLWxvZ2luIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmOGZjOwogIG1pbi1oZWlnaHQ6IDEwMHZoOwogIC5lbC1zZWxlY3QgewogICAgd2lkdGg6IDEwMCU7CiAgfQogIC5mb3JtIHsKICAgIG1heC13aWR0aDogNTEycHg7CiAgICBtYXJnaW46IDQwcHggYXV0byAwOwogICAgYm94LXNoYWRvdzogMHB4IDAuNnB4IDEuOHB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMHB4IDMuMnB4IDcuMnB4IHJnYmEoMCwgMCwgMCwgMC4xMyk7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYy1iZy13aGl0ZSk7CiAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4OwogICAgICBtYXJnaW4tbGVmdDogMjBweDsKICAgIH0KCiAgICAuZm9ybS1pdGVtIHsKICAgICAgcGFkZGluZzogMzBweCAyNHB4OwogICAgICAudGl0bGUtZm9ybSB7CiAgICAgICAgY29sb3I6ICMyMDFmMWU7CiAgICAgIH0KICAgIH0KCiAgICAuYnRuIHsKICAgICAgcGFkZGluZzogMTJweCAwICFpbXBvcnRhbnQ7CiAgICAgIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50OwogICAgICBsaW5lLWhlaWdodDogMjRweCAhaW1wb3J0YW50OwogICAgfQogICAgLmlucHV0LXBhc3N3b3JkIHsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgfQogICAgLmljb24tc2hvdy1wYXNzd29yZCB7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICB0b3A6IDNweDsKICAgICAgcmlnaHQ6IDE0cHg7CiAgICAgIC5zcGFuLWljb24gewogICAgICAgIGNvbG9yOiB2YXIoLS1iYy1jb2xvci1ncmV5OTApOwogICAgICB9CiAgICB9CiAgfQogIC5sYWJlbC1ib3ggewogICAgbWFyZ2luLWJvdHRvbTogOHB4OwogICAgY29sb3I6IHZhcigtLWJjLXRhYmxlLXRleHQtY29sb3IpOwogICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICB9CiAgLmlucHV0LXBhc3N3b3JkLAogIC5pbnB1dC1wYXNzd29yZDIgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogIH0KICAuaWNvbi1zaG93LXBhc3N3b3JkLAogIC5pY29uLXNob3ctcGFzc3dvcmQyIHsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogM3B4OwogICAgcmlnaHQ6IDE0cHg7CiAgICAuc3Bhbi1pY29uIHsKICAgICAgY29sb3I6IHZhcigtLWJjLWNvbG9yLWdyZXk5MCk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["VerifyPhone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VerifyPhone.vue","sourceRoot":"src/modules/auth/views","sourcesContent":["<template>\r\n  <div class=\"bc-login\">\r\n    <header-login />\r\n    <div class=\"form\">\r\n      <el-form class=\"form-item\" :model=\"form\" :rules=\"rules\" ref=\"form-phone\">\r\n        <div class=\"text-3xl text-semibold text-center mb-2 title-form\">{{ $t('verify.phone-title') }}</div>\r\n\r\n        <el-form-item prop=\"country\">\r\n          <div class=\"be-flex label\" slot=\"label\">{{ $t('label.country') }}</div>\r\n          <!-- <el-select v-model=\"form.country\" class=\"w-100\" clearable @change=\"handleSelectCountry\">\r\n            <el-option v-for=\"(country, index) in listCountry\" :key=\"index\" :label=\"country.name\" :value=\"country.name\" />\r\n          </el-select> -->\r\n          <el-select v-model=\"form.country\" filterable reserve-keyword remote :remote-method=\"remoteCountry\" clearable @change=\"handleSelectCountry\">\r\n            <el-option v-for=\"(country, index) in listCountry\" :key=\"index\" :label=\"country.name\" :value=\"country.name\" />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"phone\">\r\n          <div class=\"be-flex label\" slot=\"label\">{{ $t('label.phone-number') }}</div>\r\n\r\n          <el-input type=\"number\" :placeholder=\"$t('placeholder.phone-number')\" v-model=\"form.phone\">\r\n            <template style=\"cursor: pointer\" slot=\"prepend\"\r\n              ><span style=\"color: #5b616e\">{{ phoneDefault }}</span></template\r\n            >\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-button :loading=\"isLoading\" :class=\"getDisableBtn ? 'btn--disabled' : null\" class=\"btn w-100 is-none-border cursor\" @click=\"handleVerify\"\r\n          >{{ $t('verify.continue') }}\r\n        </el-button>\r\n      </el-form>\r\n    </div>\r\n    <!-- <language :isReload=\"false\" @changeLanguage=\"handleChangeLanguage\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import VueRecaptcha from 'vue-recaptcha'\r\n  import HeaderLogin from '../components/HeaderLogin.vue'\r\n  import Language from '../components/Language.vue'\r\n  import { namespace } from 'vuex-class'\r\n  import countryJson from '@/utils/country/index.json'\r\n\r\n  import getRepository from '@/services'\r\n  import { AuthRepository } from '@/services/repositories/auth'\r\n\r\n  import { Component, Vue, Watch } from 'vue-property-decorator'\r\n\r\n  import trim from 'lodash/trim'\r\n  import filter from 'lodash/filter'\r\n  import includes from 'lodash/includes'\r\n\r\n  const apiAuth: AuthRepository = getRepository('auth')\r\n\r\n  const bcAuth = namespace('beAuth')\r\n  const beBase = namespace('beBase')\r\n\r\n  interface IListCountry {\r\n    name: string\r\n    dial_code: string\r\n    code: string\r\n  }\r\n  @Component({ components: { VueRecaptcha, HeaderLogin, Language } })\r\n  export default class VerifyPhone extends Vue {\r\n    @bcAuth.Mutation('SET_USER_INFO') setUserInfo!: (data: Record<string, any>) => void\r\n    @beBase.State('urlSystem') urlSystem!: Record<string, any>\r\n    @bcAuth.Action('setToken') setToken!: (data: Record<string, any>) => Promise<void>\r\n    isLoading = false\r\n    listCountry: IListCountry[] = countryJson\r\n    language = ''\r\n    selectLanguage = ''\r\n    phoneDefault = '+84'\r\n    form: Record<string, any> = {\r\n      country: '',\r\n      phone: ''\r\n    }\r\n\r\n    optionLanguage: Array<Record<string, any>> = [\r\n      {\r\n        id: 1,\r\n        lang: 'en'\r\n      },\r\n      {\r\n        id: 2,\r\n        lang: 'vi'\r\n      }\r\n    ]\r\n\r\n    rules: Record<string, any> = {\r\n      country: [\r\n        {\r\n          required: true,\r\n          message: this.$t('validate.wrong-country'),\r\n          trigger: 'change'\r\n        }\r\n      ],\r\n      phone: [\r\n        {\r\n          required: true,\r\n          message: this.$t('validate.phone-number'),\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    }\r\n\r\n    get getDisableBtn(): boolean {\r\n      return !(this.form.country && this.form.phone)\r\n    }\r\n\r\n    created(): void {\r\n      this.language = window.localStorage.getItem('bc-lang')!\r\n      this.selectLanguage = this.language\r\n      const currentCountry = filter(this.listCountry, country => country.code === 'VN')[0]\r\n      this.form.country = currentCountry.name\r\n    }\r\n\r\n    handleSelectCountry(country: string): void {\r\n      this.phoneDefault = filter(this.listCountry, item => item.name === country)[0].dial_code\r\n    }\r\n\r\n    handleChangeLanguage(): void {\r\n      //@ts-ignore\r\n      this.$refs['form-phone']?.resetFields()\r\n    }\r\n    handleVerify(): void {\r\n      if (this.getDisableBtn) {\r\n        return\r\n      }\r\n      //@ts-ignore\r\n      this.$refs['form-phone']?.validate(async valid => {\r\n        if (valid) {\r\n          const email = this.$route.query.email\r\n          const data = {\r\n            ...this.form,\r\n            countryCode: this.phoneDefault,\r\n            email\r\n          }\r\n          apiAuth\r\n            .verifyPhone(data, true)\r\n            .then(res => {\r\n              if (includes(this.urlSystem['code.phone.verify.require'], this.phoneDefault)) {\r\n                this.$router.push({\r\n                  name: 'verify-phone',\r\n                  query: { email, reason: 'VERIFY-SMS', type: 'SMS', country: this.form.country, phone: this.form.phone, countryCode: this.phoneDefault }\r\n                })\r\n              } else {\r\n                this.setToken(res)\r\n                this.setUserInfo(res)\r\n                this.$router.push({ name: 'Wallet' })\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n        }\r\n      })\r\n    }\r\n\r\n    getMobileOperatingSystem(): string {\r\n      let userAgent = navigator.userAgent || navigator.vendor\r\n\r\n      // Windows Phone must come first because its UA also contains \"Android\"\r\n      if (/windows phone/i.test(userAgent)) {\r\n        return 'Windows Phone'\r\n      }\r\n\r\n      if (/android/i.test(userAgent)) {\r\n        return 'Android'\r\n      }\r\n\r\n      // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n      if (/iPad|iPhone|iPod/.test(userAgent)) {\r\n        return 'iOS'\r\n      }\r\n\r\n      return 'unknown'\r\n    }\r\n\r\n    //search country\r\n    @Watch('form.country')\r\n    clearCountry(value: any) {\r\n      if (!value) {\r\n        this.listCountry = countryJson\r\n      }\r\n    }\r\n    remoteCountry(query: string): void {\r\n      if (query) {\r\n        this.listCountry = filter(\r\n          countryJson,\r\n          country => trim(country.code).toUpperCase().includes(query.toUpperCase()) || trim(country.name).toUpperCase().includes(query.toUpperCase())\r\n        )\r\n        // if (currentCountry.length > 0) {\r\n        //   this.listCountry = currentCountry\r\n        // }\r\n      } else if (!query) {\r\n        this.listCountry = countryJson\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .bc-login {\r\n    background-color: #f6f8fc;\r\n    min-height: 100vh;\r\n    .el-select {\r\n      width: 100%;\r\n    }\r\n    .form {\r\n      max-width: 512px;\r\n      margin: 40px auto 0;\r\n      box-shadow: 0px 0.6px 1.8px rgba(0, 0, 0, 0.1), 0px 3.2px 7.2px rgba(0, 0, 0, 0.13);\r\n      border-radius: 8px;\r\n      background-color: var(--bc-bg-white);\r\n      @media (max-width: 600px) {\r\n        margin-right: 20px;\r\n        margin-left: 20px;\r\n      }\r\n\r\n      .form-item {\r\n        padding: 30px 24px;\r\n        .title-form {\r\n          color: #201f1e;\r\n        }\r\n      }\r\n\r\n      .btn {\r\n        padding: 12px 0 !important;\r\n        font-size: 16px !important;\r\n        line-height: 24px !important;\r\n      }\r\n      .input-password {\r\n        position: relative;\r\n      }\r\n      .icon-show-password {\r\n        cursor: pointer;\r\n        position: absolute;\r\n        top: 3px;\r\n        right: 14px;\r\n        .span-icon {\r\n          color: var(--bc-color-grey90);\r\n        }\r\n      }\r\n    }\r\n    .label-box {\r\n      margin-bottom: 8px;\r\n      color: var(--bc-table-text-color);\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n    }\r\n    .input-password,\r\n    .input-password2 {\r\n      position: relative;\r\n    }\r\n    .icon-show-password,\r\n    .icon-show-password2 {\r\n      cursor: pointer;\r\n      position: absolute;\r\n      top: 3px;\r\n      right: 14px;\r\n      .span-icon {\r\n        color: var(--bc-color-grey90);\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}