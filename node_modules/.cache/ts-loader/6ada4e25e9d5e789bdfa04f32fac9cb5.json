{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\popup\\PopupVerifiedSms.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\popup\\PopupVerifiedSms.vue","mtime":1660123011575},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\popup\\PopupVerifiedSms.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins, Prop, Watch } from 'vue-property-decorator'\nimport PopupMixin from '@/mixins/popup'\n\nimport getRepository from '@/services'\nimport WalletRepository from '@/services/repositories/wallet'\nimport { SettingRepository } from '@/services/repositories/setting'\nimport { AuthRepository } from '@/services/repositories/auth'\nimport debounce from 'lodash/debounce'\nimport { namespace } from 'vuex-class'\nimport { IUser } from '@/interface'\nimport includes from 'lodash/includes'\nconst bcAuth = namespace('beAuth')\nconst apiAuth: AuthRepository = getRepository('auth')\nconst api: SettingRepository = getRepository('setting')\n@Component\nexport default class PopupVerifySms extends Mixins(PopupMixin) {\n  @bcAuth.State('user') user!: IUser\n  @Prop({ required: true, type: Object, default: () => ({}) }) info!: Record<string, any>\n\n  form: Record<string, any> = {\n    code: ''\n  }\n  isLoading = false\n  success: any = 0\n  rules: Record<string, any> = {\n    code: [\n      {\n        required: true,\n        message: this.$t('verify.wrong-code'),\n        trigger: 'blur'\n      },\n      {\n        len: 6,\n        message: this.$t('changePassword.errorLengthVerificationCode'),\n        trigger: 'blur'\n      }\n    ]\n  }\n  get getDisableBtn(): boolean {\n    return this.form.code.length !== 6\n  }\n\n  @Watch('form.code') watchCode(code: string): void {\n    if (code) {\n      //@ts-ignore\n      this.$refs['form-verify']?.clearValidate()\n    }\n  }\n\n  // debounce chan doble click\n  debounceFilter = debounce((nameAction: any) => {\n    if (nameAction == 'handleResendCode') {\n      this.resendCode()\n    }\n    if (nameAction == 'handleSubmit') {\n      this.submit()\n    }\n  }, 400)\n  handleResendCode(): void {\n    this.debounceFilter('handleResendCode')\n  }\n  pushNotifi = false\n  async resendCode(): Promise<void> {\n    this.pushNotifi = true\n    this.handleSendCode()\n  }\n  handleCallSendCode(): void {\n    api.getProfile().then((res: any) => {\n      const data = {\n        country: res.data.country,\n        phone: this.info.phone,\n        countryCode: res.data.countryCode,\n        email: this.info.email,\n        phoneCall: true\n      }\n      let message: any = ''\n      apiAuth.verifyPhone(data).then(() => {\n        message = this.$t('notify.send-code-voice')\n        this.$message.success({ message, duration: 5000 })\n      })\n    })\n  }\n  handleReset(): void {\n    //@ts-ignore\n    this.$refs['form-verify']?.clearValidate()\n    this.form = {\n      code: ''\n    }\n  }\n  handleClose(): void {\n    this.handleReset()\n  }\n\n  async handleSendCode(): Promise<void> {\n    try {\n      const data = {\n        email: this.info.email,\n        type: 'SMS',\n        reason: ''\n      }\n      await apiAuth.resendCode(data).then(() => {\n        if (this.pushNotifi) {\n          let message: any = ''\n          message = this.$t('notify.send-code')\n          this.$message.success({ message, duration: 5000 })\n        }\n      })\n    } catch (error: any) {\n      let message: any = ''\n      const { config, data } = error.response\n      if (data.status === 'USER_BLOCKED' && includes(config.url, 'resendCode')) {\n        message = this.$t('notify.user-blocked-resend-code')\n        this.$message.error({ message, duration: 5000 })\n      }\n    }\n    this.pushNotifi = false\n  }\n\n  handleOpen(): void {\n    this.handleSendCode()\n  }\n\n  handleSubmit(): void {\n    //@ts-ignore\n    this.$refs['form-verify']?.validate(valid => {\n      if (valid) {\n        this.debounceFilter('handleSubmit')\n      }\n    })\n  }\n  async submit(): Promise<void> {\n    try {\n      this.isLoading = true\n      const data = {\n        email: this.info.email,\n        verificationCode: this.form.code,\n        type: 'SMS'\n      }\n      apiAuth\n        .verifyCode('CODE', { ...data })\n        .then(() => {\n          this.setOpenPopup({\n            popupName: 'popup-verified-sms',\n            isOpen: false\n          })\n          this.isLoading = false\n          this.$emit('follow2fa')\n        })\n        .catch(err => {\n          this.isLoading = false\n        })\n    } catch (error) {\n      this.isLoading = false\n    }\n  }\n}\n"],"sourceRoot":""}]}