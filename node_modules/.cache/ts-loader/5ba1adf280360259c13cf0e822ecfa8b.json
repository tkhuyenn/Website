{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\LoginPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\LoginPage.vue","mtime":1661160594691},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJEOlxcTkVVXFxDRFRUXFxmcm9udGVuZFxcV2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkQ6XFxORVVcXENEVFRcXGZyb250ZW5kXFxXZWJzaXRlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiRDpcXE5FVVxcQ0RUVFxcZnJvbnRlbmRcXFdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGluaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJEOlxcTkVVXFxDRFRUXFxmcm9udGVuZFxcV2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY3JlYXRlU3VwZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IFZ1ZVJlY2FwdGNoYSBmcm9tICd2dWUtcmVjYXB0Y2hhJzsKaW1wb3J0IEhlYWRlckxvZ2luIGZyb20gJy4uL2NvbXBvbmVudHMvSGVhZGVyTG9naW4udnVlJzsKaW1wb3J0IExhbmd1YWdlIGZyb20gJy4uL2NvbXBvbmVudHMvTGFuZ3VhZ2UudnVlJzsKaW1wb3J0IFZlcmlmeVBhZ2UgZnJvbSAnLi9WZXJpZnkudnVlJzsKaW1wb3J0IGdldFJlcG9zaXRvcnkgZnJvbSAnQC9zZXJ2aWNlcyc7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG5hbWVzcGFjZSB9IGZyb20gJ3Z1ZXgtY2xhc3MnOwp2YXIgYmNBdXRoID0gbmFtZXNwYWNlKCdiZUF1dGgnKTsKdmFyIGJlQmFzZSA9IG5hbWVzcGFjZSgnYmVCYXNlJyk7CnZhciBiY01hcmtldEhvbWUgPSBuYW1lc3BhY2UoJ2JjTWFya2V0UHJpbWFyeUhvbWUnKTsKdmFyIGFwaUF1dGggPSBnZXRSZXBvc2l0b3J5KCdhdXRoJyk7Cgp2YXIgTG9naW5QYWdlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKExvZ2luUGFnZSwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTG9naW5QYWdlKTsKCiAgZnVuY3Rpb24gTG9naW5QYWdlKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2dpblBhZ2UpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5zaG93UGFzcyA9IGZhbHNlOwogICAgX3RoaXMubGFuZ3VhZ2UgPSAnZW4nOyAvLyBzaXRlS2V5ID0gJzZMY2JiS0FjQUFBQUFHUzlCaXhCdkg0b2tJQlZOc1k3bHl3UERsZVgnCgogICAgX3RoaXMuZm9ybSA9IHsKICAgICAgZW1haWw6ICcnLAogICAgICBwYXNzd29yZDogJycKICAgIH07CiAgICBfdGhpcy5yZW1lbWJlciA9IGZhbHNlOwogICAgX3RoaXMuaXNWZXJpZnlDYXB0Y2hhID0gZmFsc2U7CiAgICBfdGhpcy5jYXB0Y2hhID0gJyc7CiAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIF90aGlzLm9wdGlvbkxhbmd1YWdlID0gW3sKICAgICAgaWQ6IDEsCiAgICAgIGxhbmc6ICdlbicKICAgIH0sIHsKICAgICAgaWQ6IDIsCiAgICAgIGxhbmc6ICd2aScKICAgIH1dOwogICAgX3RoaXMucnVsZXMgPSB7CiAgICAgIGVtYWlsOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIG1lc3NhZ2U6IF90aGlzLiR0KCdsb2dpbi53cm9uZy1lbWFpbCcpLAogICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICB9LCB7CiAgICAgICAgdHlwZTogJ2VtYWlsJywKICAgICAgICBtZXNzYWdlOiBfdGhpcy4kdCgnbG9naW4ud3JvbmctZW1haWwtdHlwZScpLAogICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICB9XSwKICAgICAgcGFzc3dvcmQ6IFt7CiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgbWVzc2FnZTogX3RoaXMuJHQoJ2xvZ2luLndyb25nLXBhc3N3b3JkJyksCiAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgIH1dCiAgICB9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKExvZ2luUGFnZSwgW3sKICAgIGtleTogImNyZWF0ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgIHRoaXMubGFuZ3VhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2JjLWxhbmcnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXREaXNhYmxlQnRuIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICBpZiAodGhpcy51cmxTeXN0ZW0gJiYgdGhpcy51cmxTeXN0ZW1bJ2FwaS5hdXRvLnRlc3QnXSAhPT0gJzEnKSB7CiAgICAgICAgcmV0dXJuICEodGhpcy5mb3JtLmVtYWlsICYmIHRoaXMuZm9ybS5wYXNzd29yZCAmJiB0aGlzLmlzVmVyaWZ5Q2FwdGNoYSk7CiAgICAgIH0KCiAgICAgIHJldHVybiAhKHRoaXMuZm9ybS5lbWFpbCAmJiB0aGlzLmZvcm0ucGFzc3dvcmQpOwogICAgfQogIH0sIHsKICAgIGtleTogInZlcmlmeUNhcHRjaGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHZlcmlmeUNhcHRjaGEoY2FwdGNoYSkgewogICAgICB0aGlzLmNhcHRjaGEgPSBjYXB0Y2hhOwogICAgICB0aGlzLmlzVmVyaWZ5Q2FwdGNoYSA9IHRydWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiZXhwaXJlZENhcHRjaGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGV4cGlyZWRDYXB0Y2hhKCkgewogICAgICB0aGlzLmlzVmVyaWZ5Q2FwdGNoYSA9IGZhbHNlOwogICAgfQogIH0sIHsKICAgIGtleTogImhhbmRsZVNpZ25VcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlU2lnblVwKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ3NpZ24tdXAnCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImhhbmRsZUZvcmdvdFBhc3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUZvcmdvdFBhc3MoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnZm9yZ290LXBhc3N3b3JkJwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJoYW5kbGVDaGFuZ2VMYW5ndWFnZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlTGFuZ3VhZ2UoKSB7CiAgICAgIHZhciBfdGhpcyQkcmVmcyR2ZXJpZnk7CgogICAgICAvL0B0cy1pZ25vcmUKICAgICAgKF90aGlzJCRyZWZzJHZlcmlmeSA9IHRoaXMuJHJlZnNbJ3ZlcmlmeSddKSA9PT0gbnVsbCB8fCBfdGhpcyQkcmVmcyR2ZXJpZnkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJCRyZWZzJHZlcmlmeS5jbGVhclZhbGlkYXRlKCk7CiAgICB9CiAgICAvKioNCiAgICAgKiAqIEx14buTbmcgbG9naW46IHZhbGlkYXRlID0+IHZlcmlmeSA9PiBob21lDQogICAgICovCgogIH0sIHsKICAgIGtleTogImhhbmRsZUxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVMb2dpbigpIHsKICAgICAgaWYgKHRoaXMuZ2V0RGlzYWJsZUJ0bikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdob21lJwogICAgICB9KTsgLy9AdHMtaWdub3JlCiAgICAgIC8vIHRoaXMuJHJlZnNbJ2Zvcm0tbG9naW4nXT8udmFsaWRhdGUoYXN5bmMgdmFsaWQgPT4gewogICAgICAvLyAgIGlmICh2YWxpZCkgewogICAgICAvLyAgICAgdHJ5IHsKICAgICAgLy8gICAgICAgbGV0IG1lc3NhZ2U6IGFueSA9ICcnCiAgICAgIC8vICAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZQogICAgICAvLyAgICAgICAvL2dldCAyRkEKICAgICAgLy8gICAgICAgLy8gY29uc3QgcmVzID0gYXdhaXQgYXBpQXV0aC5nZXQyRkEoeyBlbWFpbDogdGhpcy5mb3JtLmVtYWlsIH0sIHRoaXMuY2FwdGNoYSkKICAgICAgLy8gICAgICAgLy8gY29uc3QgdHlwZSA9IHJlcwogICAgICAvLyAgICAgICBjb25zdCBlbmNvZGVQYXNzID0gdGhpcy4kb3B0aW9ucy5maWx0ZXJzPy5lbmNyeXB0UGFzc3dvcmQodGhpcy5mb3JtLnBhc3N3b3JkKQogICAgICAvLyAgICAgICBjb25zdCByZXMgPSBhd2FpdCBhcGlBdXRoLnZhbGlkYXRlVXNlcih7IC4uLnRoaXMuZm9ybSwgcGFzc3dvcmQ6IGVuY29kZVBhc3MgfSwgdGhpcy5jYXB0Y2hhKQogICAgICAvLyAgICAgICBjb25zdCB0eXBlID0gcmVzCiAgICAgIC8vICAgICAgIGNvbnN0IG5hbWVSb3V0ZSA9IHR5cGUudHlwZSA9PT0gJ0VNQUlMJyA/ICd2ZXJpZnktZW1haWwnIDogdHlwZS50eXBlID09PSAnU01TJyA/ICd2ZXJpZnktcGhvbmUnIDogJ3ZlcmlmeS1hcHAnCiAgICAgIC8vICAgICAgIGlmICghcmVzLmVtYWlsVmVyaWZpZWQgJiYgIXJlcy5waG9uZVZlcmlmaWVkKSB7CiAgICAgIC8vICAgICAgICAgdHJ5IHsKICAgICAgLy8gICAgICAgICAgIC8vIGF3YWl0IGFwaUF1dGgucmVzZW5kQ29kZSh7IGVtYWlsOiB0aGlzLmZvcm0uZW1haWwgfSkKICAgICAgLy8gICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ3ZlcmlmeS1lbWFpbCcsIHF1ZXJ5OiB7IHR5cGU6ICdFTUFJTCcsIGVtYWlsOiB0aGlzLmZvcm0uZW1haWwsIHJlYXNvbjogJ1NJR05fVVAnIH0gfSkKICAgICAgLy8gICAgICAgICAgIG1lc3NhZ2UgPSB0aGlzLiR0KCdub3RpZnkuc2VuZC1jb2RlJykKICAgICAgLy8gICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyh7IG1lc3NhZ2UsIGR1cmF0aW9uOiA1MDAwIH0pCiAgICAgIC8vICAgICAgICAgICByZXR1cm4KICAgICAgLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAvLyAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgIC8vICAgICAgICAgICAvLyBtZXNzYWdlID0gdGhpcy4kdCgnbm90aWZ5LnNlbmQtY29kZS1mYWlsJykKICAgICAgLy8gICAgICAgICAgIC8vIHRoaXMuJG1lc3NhZ2UuZXJyb3IoeyBtZXNzYWdlLCBkdXJhdGlvbjogNTAwMCB9KQogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgfQogICAgICAvLyAgICAgICBpZiAocmVzLmVtYWlsVmVyaWZpZWQgJiYgIXJlcy5waG9uZVZlcmlmaWVkKSB7CiAgICAgIC8vICAgICAgICAgaWYgKHJlcy5za2lwVmVyaWZ5UGhvbmUpIHsKICAgICAgLy8gICAgICAgICAgIGlmICh0eXBlLnR5cGUgPT09ICdOT05FJykgewogICAgICAvLyAgICAgICAgICAgICB0aGlzLmxvZ2luKHsgLi4udGhpcy5mb3JtLCBwYXNzd29yZDogZW5jb2RlUGFzcyB9KS50aGVuKCgpID0+IHsKICAgICAgLy8gICAgICAgICAgICAgICAvLyBjYXNlIGNsaWNrIGFueSBidXR0b24gZnJvbSAgbWFya2V0cGxhY2UgLCBidXQgbG9naW4geWV0CiAgICAgIC8vICAgICAgICAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmlzQmFjayA9PT0gJzEnKSB7CiAgICAgIC8vICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gdGhpcy4kcm91dGUucXVlcnkubmFtZSBhcyBzdHJpbmcKICAgICAgLy8gICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLiRyb3V0ZS5xdWVyeS50eXBlIGFzIHN0cmluZwogICAgICAvLyAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZCBhcyBzdHJpbmcKICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZSwgcGFyYW1zOiB7IHR5cGUsIGlkIH0gfSkKICAgICAgLy8gICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmlzQmFjayA9PT0gJ25mdCcpIHsKICAgICAgLy8gICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLiRyb3V0ZS5xdWVyeS5uYW1lIGFzIHN0cmluZwogICAgICAvLyAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZCBhcyBzdHJpbmcKICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZSwgcGFyYW1zOiB7IGlkIH0gfSkKICAgICAgLy8gICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnV2FsbGV0JyB9KQogICAgICAvLyAgICAgICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgICAgICBtZXNzYWdlID0gdGhpcy4kdCgnbm90aWZ5LmxvZ2luLXN1Y2Nlc3MnKQogICAgICAvLyAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyh7IG1lc3NhZ2UsIGR1cmF0aW9uOiA1MDAwIH0pCiAgICAgIC8vICAgICAgICAgICAgIH0pCiAgICAgIC8vICAgICAgICAgICB9IGVsc2UgewogICAgICAvLyAgICAgICAgICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuaXNCYWNrID09PSAnbmZ0JykgewogICAgICAvLyAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgLy8gICAgICAgICAgICAgICAgIG5hbWU6IG5hbWVSb3V0ZSwKICAgICAgLy8gICAgICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgIC8vICAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLmZvcm0uZW1haWwsCiAgICAgIC8vICAgICAgICAgICAgICAgICAgIHBhc3M6IGVuY29kZVBhc3MsCiAgICAgIC8vICAgICAgICAgICAgICAgICAgIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nLAogICAgICAvLyAgICAgICAgICAgICAgICAgICBpc0JhY2s6ICduZnQnLAogICAgICAvLyAgICAgICAgICAgICAgICAgICBpZDogdGhpcy4kcm91dGUucXVlcnkuaWQsCiAgICAgIC8vICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuJHJvdXRlLnF1ZXJ5Lm5hbWUKICAgICAgLy8gICAgICAgICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgICAgICB9KQogICAgICAvLyAgICAgICAgICAgICB9IGVsc2UgewogICAgICAvLyAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogbmFtZVJvdXRlLCBxdWVyeTogeyB0eXBlOiB0eXBlLnR5cGUsIGVtYWlsOiB0aGlzLmZvcm0uZW1haWwsIHBhc3M6IGVuY29kZVBhc3MsIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nIH0gfSkKICAgICAgLy8gICAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgIH0gZWxzZSB7CiAgICAgIC8vICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICd2ZXJpZnktcGhvbmUtbnVtYmVyJywgcXVlcnk6IHsgZW1haWw6IHRoaXMuZm9ybS5lbWFpbCB9IH0pCiAgICAgIC8vICAgICAgICAgfQogICAgICAvLyAgICAgICAgIHJldHVybgogICAgICAvLyAgICAgICB9CiAgICAgIC8vICAgICAgIC8vc2VuZCBjb2RlCiAgICAgIC8vICAgICAgIGlmIChyZXMuZW1haWxWZXJpZmllZCAmJiByZXMucGhvbmVWZXJpZmllZCAmJiAodHlwZS50eXBlID09PSAnRU1BSUwnIHx8IHR5cGUudHlwZSA9PT0gJ1NNUycpKSB7CiAgICAgIC8vICAgICAgICAgdHJ5IHsKICAgICAgLy8gICAgICAgICAgIC8vIGNhc2UgY2xpY2sgYW55IGJ1dHRvbiBmcm9tICBtYXJrZXRwbGFjZSAsIGJ1dCBsb2dpbiB5ZXQKICAgICAgLy8gICAgICAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5pc0JhY2sgPT09ICcxJykgewogICAgICAvLyAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgIC8vICAgICAgICAgICAgICAgbmFtZTogbmFtZVJvdXRlLAogICAgICAvLyAgICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgIC8vICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlLnR5cGUsCiAgICAgIC8vICAgICAgICAgICAgICAgICBlbWFpbDogdGhpcy5mb3JtLmVtYWlsLAogICAgICAvLyAgICAgICAgICAgICAgICAgcGFzczogZW5jb2RlUGFzcywKICAgICAgLy8gICAgICAgICAgICAgICAgIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nLAogICAgICAvLyAgICAgICAgICAgICAgICAgaXNCYWNrOiAnMScsCiAgICAgIC8vICAgICAgICAgICAgICAgICBpZDogdGhpcy4kcm91dGUucXVlcnkuaWQsCiAgICAgIC8vICAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLiRyb3V0ZS5xdWVyeS5uYW1lLAogICAgICAvLyAgICAgICAgICAgICAgICAgbWFya2V0VHlwZTogdGhpcy4kcm91dGUucXVlcnkudHlwZQogICAgICAvLyAgICAgICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgICAgfSkKICAgICAgLy8gICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy4kcm91dGUucXVlcnkuaXNCYWNrID09PSAnbmZ0JykgewogICAgICAvLyAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgIC8vICAgICAgICAgICAgICAgbmFtZTogbmFtZVJvdXRlLAogICAgICAvLyAgICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgIC8vICAgICAgICAgICAgICAgICBlbWFpbDogdGhpcy5mb3JtLmVtYWlsLAogICAgICAvLyAgICAgICAgICAgICAgICAgcGFzczogZW5jb2RlUGFzcywKICAgICAgLy8gICAgICAgICAgICAgICAgIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nLAogICAgICAvLyAgICAgICAgICAgICAgICAgaXNCYWNrOiAnbmZ0JywKICAgICAgLy8gICAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgLy8gICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuJHJvdXRlLnF1ZXJ5Lm5hbWUKICAgICAgLy8gICAgICAgICAgICAgICB9CiAgICAgIC8vICAgICAgICAgICAgIH0pCiAgICAgIC8vICAgICAgICAgICB9IGVsc2UgewogICAgICAvLyAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6IG5hbWVSb3V0ZSwgcXVlcnk6IHsgdHlwZTogdHlwZS50eXBlLCBlbWFpbDogdGhpcy5mb3JtLmVtYWlsLCBwYXNzOiBlbmNvZGVQYXNzLCByZWFzb246ICdSRVFVRVNUX0xPR0lOJyB9IH0pCiAgICAgIC8vICAgICAgICAgICB9CiAgICAgIC8vICAgICAgICAgICBtZXNzYWdlID0gdGhpcy4kdCgnbm90aWZ5LnNlbmQtY29kZScpCiAgICAgIC8vICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoeyBtZXNzYWdlLCBkdXJhdGlvbjogNTAwMCB9KQogICAgICAvLyAgICAgICAgICAgcmV0dXJuCiAgICAgIC8vICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAvLyAgICAgICAgICAgLy8gbWVzc2FnZSA9IHRoaXMuJHQoJ25vdGlmeS5zZW5kLWNvZGUtZmFpbCcpCiAgICAgIC8vICAgICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLmVycm9yKHsgbWVzc2FnZSwgZHVyYXRpb246IDUwMDAgfSkKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICAgICAgaWYgKHJlcy5lbWFpbFZlcmlmaWVkICYmIHJlcy5waG9uZVZlcmlmaWVkICYmIHR5cGUudHlwZSA9PT0gJ0FQUCcpIHsKICAgICAgLy8gICAgICAgICAvLyBjYXNlIGNsaWNrIGFueSBidXR0b24gZnJvbSAgbWFya2V0cGxhY2UgLCBidXQgbG9naW4geWV0CiAgICAgIC8vICAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmlzQmFjayA9PT0gJzEnKSB7CiAgICAgIC8vICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgIC8vICAgICAgICAgICAgIG5hbWU6IG5hbWVSb3V0ZSwKICAgICAgLy8gICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgLy8gICAgICAgICAgICAgICB0eXBlOiB0eXBlLnR5cGUsCiAgICAgIC8vICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuZm9ybS5lbWFpbCwKICAgICAgLy8gICAgICAgICAgICAgICBwYXNzOiBlbmNvZGVQYXNzLAogICAgICAvLyAgICAgICAgICAgICAgIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nLAogICAgICAvLyAgICAgICAgICAgICAgIGlzQmFjazogJzEnLAogICAgICAvLyAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgLy8gICAgICAgICAgICAgICBuYW1lOiB0aGlzLiRyb3V0ZS5xdWVyeS5uYW1lLAogICAgICAvLyAgICAgICAgICAgICAgIG1hcmtldFR5cGU6IHRoaXMuJHJvdXRlLnF1ZXJ5LnR5cGUKICAgICAgLy8gICAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgICAgfSkKICAgICAgLy8gICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmlzQmFjayA9PT0gJ25mdCcpIHsKICAgICAgLy8gICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgLy8gICAgICAgICAgICAgbmFtZTogbmFtZVJvdXRlLAogICAgICAvLyAgICAgICAgICAgICBxdWVyeTogewogICAgICAvLyAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLmZvcm0uZW1haWwsCiAgICAgIC8vICAgICAgICAgICAgICAgcGFzczogZW5jb2RlUGFzcywKICAgICAgLy8gICAgICAgICAgICAgICByZWFzb246ICdSRVFVRVNUX0xPR0lOJywKICAgICAgLy8gICAgICAgICAgICAgICBpc0JhY2s6ICduZnQnLAogICAgICAvLyAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgLy8gICAgICAgICAgICAgICBuYW1lOiB0aGlzLiRyb3V0ZS5xdWVyeS5uYW1lCiAgICAgIC8vICAgICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgIH0pCiAgICAgIC8vICAgICAgICAgfSBlbHNlIHsKICAgICAgLy8gICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogbmFtZVJvdXRlLCBxdWVyeTogeyB0eXBlOiB0eXBlLnR5cGUsIGVtYWlsOiB0aGlzLmZvcm0uZW1haWwsIHBhc3M6IGVuY29kZVBhc3MsIHJlYXNvbjogJ1JFUVVFU1RfTE9HSU4nIH0gfSkKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgICAgcmV0dXJuCiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICAgICAgaWYgKHR5cGUudHlwZSA9PT0gJ05PTkUnKSB7CiAgICAgIC8vICAgICAgICAgdGhpcy5sb2dpbih7IC4uLnRoaXMuZm9ybSwgcGFzc3dvcmQ6IGVuY29kZVBhc3MgfSkudGhlbigoKSA9PiB7CiAgICAgIC8vICAgICAgICAgICAvLyBjYXNlIGNsaWNrIGFueSBidXR0b24gZnJvbSAgbWFya2V0cGxhY2UgLCBidXQgbG9naW4geWV0CiAgICAgIC8vICAgICAgICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuaXNCYWNrID09PSAnMScpIHsKICAgICAgLy8gICAgICAgICAgICAgY29uc3QgbmFtZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm5hbWUgYXMgc3RyaW5nCiAgICAgIC8vICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLiRyb3V0ZS5xdWVyeS50eXBlIGFzIHN0cmluZwogICAgICAvLyAgICAgICAgICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkIGFzIHN0cmluZwogICAgICAvLyAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWUsIHBhcmFtczogeyB0eXBlLCBpZCB9IH0pCiAgICAgIC8vICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmlzQmFjayA9PT0gJ25mdCcpIHsKICAgICAgLy8gICAgICAgICAgICAgY29uc3QgbmFtZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm5hbWUgYXMgc3RyaW5nCiAgICAgIC8vICAgICAgICAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucXVlcnkuaWQgYXMgc3RyaW5nCiAgICAgIC8vICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZSwgcGFyYW1zOiB7IGlkIH0gfSkKICAgICAgLy8gICAgICAgICAgIH0gZWxzZSB7CiAgICAgIC8vICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ1dhbGxldCcgfSkKICAgICAgLy8gICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgIG1lc3NhZ2UgPSB0aGlzLiR0KCdub3RpZnkubG9naW4tc3VjY2VzcycpCiAgICAgIC8vICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoeyBtZXNzYWdlLCBkdXJhdGlvbjogNTAwMCB9KQogICAgICAvLyAgICAgICAgIH0pCiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICAgICAgLy8gdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgICAvLyAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkgewogICAgICAvLyAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgIC8vICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gZXJyb3IucmVzcG9uc2UKICAgICAgLy8gICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSAnSU5WQUxJRF9DQVBUQ0hBJykgewogICAgICAvLyAgICAgICAgIC8vQHRzLWlnbm9yZQogICAgICAvLyAgICAgICAgIHRoaXMuJHJlZnNbJ3JlY2FwdGNoYSddLnJlc2V0KCkKICAgICAgLy8gICAgICAgICB0aGlzLmlzVmVyaWZ5Q2FwdGNoYSA9IGZhbHNlCiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICAgIH0KICAgICAgLy8gICB9CiAgICAgIC8vIH0pCiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0TW9iaWxlT3BlcmF0aW5nU3lzdGVtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRNb2JpbGVPcGVyYXRpbmdTeXN0ZW0oKSB7CiAgICAgIHZhciB1c2VyQWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50IHx8IG5hdmlnYXRvci52ZW5kb3I7IC8vIFdpbmRvd3MgUGhvbmUgbXVzdCBjb21lIGZpcnN0IGJlY2F1c2UgaXRzIFVBIGFsc28gY29udGFpbnMgIkFuZHJvaWQiCgogICAgICBpZiAoL3dpbmRvd3MgcGhvbmUvaS50ZXN0KHVzZXJBZ2VudCkpIHsKICAgICAgICByZXR1cm4gJ1dpbmRvd3MgUGhvbmUnOwogICAgICB9CgogICAgICBpZiAoL2FuZHJvaWQvaS50ZXN0KHVzZXJBZ2VudCkpIHsKICAgICAgICByZXR1cm4gJ0FuZHJvaWQnOwogICAgICB9IC8vIGlPUyBkZXRlY3Rpb24gZnJvbTogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvOTAzOTg4NS8xNzc3MTAKCgogICAgICBpZiAoL2lQYWR8aVBob25lfGlQb2QvLnRlc3QodXNlckFnZW50KSkgewogICAgICAgIHJldHVybiAnaU9TJzsKICAgICAgfQoKICAgICAgcmV0dXJuICd1bmtub3duJzsKICAgIH0KICB9XSk7CgogIHJldHVybiBMb2dpblBhZ2U7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW2JjQXV0aC5BY3Rpb24oJ2xvZ2luJyldLCBMb2dpblBhZ2UucHJvdG90eXBlLCAibG9naW4iLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbYmVCYXNlLlN0YXRlKCdzaXRlS2V5JyldLCBMb2dpblBhZ2UucHJvdG90eXBlLCAic2l0ZUtleSIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtiZUJhc2UuU3RhdGUoJ3VybFN5c3RlbScpXSwgTG9naW5QYWdlLnByb3RvdHlwZSwgInVybFN5c3RlbSIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtiY01hcmtldEhvbWUuU3RhdGUoJ2JhY2tUb1BhZ2UnKV0sIExvZ2luUGFnZS5wcm90b3R5cGUsICJiYWNrVG9QYWdlIiwgdm9pZCAwKTsKCkxvZ2luUGFnZSA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgVnVlUmVjYXB0Y2hhOiBWdWVSZWNhcHRjaGEsCiAgICBIZWFkZXJMb2dpbjogSGVhZGVyTG9naW4sCiAgICBWZXJpZnlQYWdlOiBWZXJpZnlQYWdlLAogICAgTGFuZ3VhZ2U6IExhbmd1YWdlCiAgfQp9KV0sIExvZ2luUGFnZSk7CmV4cG9ydCBkZWZhdWx0IExvZ2luUGFnZTs="},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\LoginPage.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport VueRecaptcha from 'vue-recaptcha'\nimport HeaderLogin from '../components/HeaderLogin.vue'\nimport Language from '../components/Language.vue'\nimport VerifyPage from './Verify.vue'\nimport getRepository from '@/services'\nimport { AuthRepository } from '@/services/repositories/auth'\nimport { Component, Vue } from 'vue-property-decorator'\nimport { namespace } from 'vuex-class'\n\nconst bcAuth = namespace('beAuth')\nconst beBase = namespace('beBase')\nconst bcMarketHome = namespace('bcMarketPrimaryHome')\nconst apiAuth: AuthRepository = getRepository('auth')\n\ninterface FormLogin {\n  email: string\n  password: string\n}\n\n@Component({ components: { VueRecaptcha, HeaderLogin, VerifyPage, Language } })\nexport default class LoginPage extends Vue {\n  @bcAuth.Action('login') login!: (data: Record<string, any>) => Promise<void>\n  @beBase.State('siteKey') siteKey!: string\n  @beBase.State('urlSystem') urlSystem!: Record<string, any>\n  @bcMarketHome.State('backToPage') backToPage!: Record<string, any>\n  showPass = false\n  language = 'en'\n  // siteKey = '6LcbbKAcAAAAAGS9BixBvH4okIBVNsY7lywPDleX'\n  form: FormLogin = {\n    email: '',\n    password: ''\n  }\n  remember = false\n  isVerifyCaptcha = false\n  captcha = ''\n  isLoading = false\n  optionLanguage: Array<Record<string, any>> = [\n    {\n      id: 1,\n      lang: 'en'\n    },\n    {\n      id: 2,\n      lang: 'vi'\n    }\n  ]\n\n  rules: Record<string, any> = {\n    email: [\n      {\n        required: true,\n        message: this.$t('login.wrong-email'),\n        trigger: 'blur'\n      },\n      { type: 'email', message: this.$t('login.wrong-email-type'), trigger: 'blur' }\n    ],\n    password: [\n      {\n        required: true,\n        message: this.$t('login.wrong-password'),\n        trigger: 'blur'\n      }\n    ]\n  }\n  created(): void {\n    this.language = window.localStorage.getItem('bc-lang')!\n  }\n\n  get getDisableBtn(): boolean {\n    if (this.urlSystem && this.urlSystem['api.auto.test'] !== '1') {\n      return !(this.form.email && this.form.password && this.isVerifyCaptcha)\n    }\n    return !(this.form.email && this.form.password)\n  }\n\n  verifyCaptcha(captcha: string): void {\n    this.captcha = captcha\n    this.isVerifyCaptcha = true\n  }\n  expiredCaptcha(): void {\n    this.isVerifyCaptcha = false\n  }\n\n  handleSignUp(): void {\n    this.$router.push({ name: 'sign-up' })\n  }\n  handleForgotPass(): void {\n    this.$router.push({ name: 'forgot-password' })\n  }\n  handleChangeLanguage(): void {\n    //@ts-ignore\n    this.$refs['verify']?.clearValidate()\n  }\n\n  /**\n   * * Luồng login: validate => verify => home\n   */\n\n  handleLogin(): void {\n    if (this.getDisableBtn) {\n      return\n    }\n    this.$router.push({ name: 'home' })\n    //@ts-ignore\n    // this.$refs['form-login']?.validate(async valid => {\n    //   if (valid) {\n    //     try {\n    //       let message: any = ''\n    //       this.isLoading = true\n    //       //get 2FA\n    //       // const res = await apiAuth.get2FA({ email: this.form.email }, this.captcha)\n    //       // const type = res\n    //       const encodePass = this.$options.filters?.encryptPassword(this.form.password)\n\n    //       const res = await apiAuth.validateUser({ ...this.form, password: encodePass }, this.captcha)\n    //       const type = res\n    //       const nameRoute = type.type === 'EMAIL' ? 'verify-email' : type.type === 'SMS' ? 'verify-phone' : 'verify-app'\n\n    //       if (!res.emailVerified && !res.phoneVerified) {\n    //         try {\n    //           // await apiAuth.resendCode({ email: this.form.email })\n    //           this.$router.push({ name: 'verify-email', query: { type: 'EMAIL', email: this.form.email, reason: 'SIGN_UP' } })\n    //           message = this.$t('notify.send-code')\n    //           this.$message.success({ message, duration: 5000 })\n    //           return\n    //         } catch (error) {\n    //           console.log(error)\n    //           // message = this.$t('notify.send-code-fail')\n    //           // this.$message.error({ message, duration: 5000 })\n    //         }\n    //       }\n\n    //       if (res.emailVerified && !res.phoneVerified) {\n    //         if (res.skipVerifyPhone) {\n    //           if (type.type === 'NONE') {\n    //             this.login({ ...this.form, password: encodePass }).then(() => {\n    //               // case click any button from  marketplace , but login yet\n    //               if (this.$route.query.isBack === '1') {\n    //                 const name = this.$route.query.name as string\n    //                 const type = this.$route.query.type as string\n    //                 const id = this.$route.query.id as string\n    //                 this.$router.push({ name, params: { type, id } })\n    //               } else if (this.$route.query.isBack === 'nft') {\n    //                 const name = this.$route.query.name as string\n    //                 const id = this.$route.query.id as string\n    //                 this.$router.push({ name, params: { id } })\n    //               } else {\n    //                 this.$router.push({ name: 'Wallet' })\n    //               }\n\n    //               message = this.$t('notify.login-success')\n    //               this.$message.success({ message, duration: 5000 })\n    //             })\n    //           } else {\n    //             if (this.$route.query.isBack === 'nft') {\n    //               this.$router.push({\n    //                 name: nameRoute,\n    //                 query: {\n    //                   email: this.form.email,\n    //                   pass: encodePass,\n    //                   reason: 'REQUEST_LOGIN',\n    //                   isBack: 'nft',\n    //                   id: this.$route.query.id,\n    //                   name: this.$route.query.name\n    //                 }\n    //               })\n    //             } else {\n    //               this.$router.push({ name: nameRoute, query: { type: type.type, email: this.form.email, pass: encodePass, reason: 'REQUEST_LOGIN' } })\n    //             }\n    //           }\n    //         } else {\n    //           this.$router.push({ name: 'verify-phone-number', query: { email: this.form.email } })\n    //         }\n    //         return\n    //       }\n\n    //       //send code\n    //       if (res.emailVerified && res.phoneVerified && (type.type === 'EMAIL' || type.type === 'SMS')) {\n    //         try {\n    //           // case click any button from  marketplace , but login yet\n    //           if (this.$route.query.isBack === '1') {\n    //             this.$router.push({\n    //               name: nameRoute,\n    //               query: {\n    //                 type: type.type,\n    //                 email: this.form.email,\n    //                 pass: encodePass,\n    //                 reason: 'REQUEST_LOGIN',\n    //                 isBack: '1',\n    //                 id: this.$route.query.id,\n    //                 name: this.$route.query.name,\n    //                 marketType: this.$route.query.type\n    //               }\n    //             })\n    //           } else if (this.$route.query.isBack === 'nft') {\n    //             this.$router.push({\n    //               name: nameRoute,\n    //               query: {\n    //                 email: this.form.email,\n    //                 pass: encodePass,\n    //                 reason: 'REQUEST_LOGIN',\n    //                 isBack: 'nft',\n    //                 id: this.$route.query.id,\n    //                 name: this.$route.query.name\n    //               }\n    //             })\n    //           } else {\n    //             this.$router.push({ name: nameRoute, query: { type: type.type, email: this.form.email, pass: encodePass, reason: 'REQUEST_LOGIN' } })\n    //           }\n    //           message = this.$t('notify.send-code')\n    //           this.$message.success({ message, duration: 5000 })\n    //           return\n    //         } catch (error) {\n    //           console.log(error)\n    //           // message = this.$t('notify.send-code-fail')\n    //           // this.$message.error({ message, duration: 5000 })\n    //         }\n    //       }\n\n    //       if (res.emailVerified && res.phoneVerified && type.type === 'APP') {\n    //         // case click any button from  marketplace , but login yet\n    //         if (this.$route.query.isBack === '1') {\n    //           this.$router.push({\n    //             name: nameRoute,\n    //             query: {\n    //               type: type.type,\n    //               email: this.form.email,\n    //               pass: encodePass,\n    //               reason: 'REQUEST_LOGIN',\n    //               isBack: '1',\n    //               id: this.$route.query.id,\n    //               name: this.$route.query.name,\n    //               marketType: this.$route.query.type\n    //             }\n    //           })\n    //         } else if (this.$route.query.isBack === 'nft') {\n    //           this.$router.push({\n    //             name: nameRoute,\n    //             query: {\n    //               email: this.form.email,\n    //               pass: encodePass,\n    //               reason: 'REQUEST_LOGIN',\n    //               isBack: 'nft',\n    //               id: this.$route.query.id,\n    //               name: this.$route.query.name\n    //             }\n    //           })\n    //         } else {\n    //           this.$router.push({ name: nameRoute, query: { type: type.type, email: this.form.email, pass: encodePass, reason: 'REQUEST_LOGIN' } })\n    //         }\n    //         return\n    //       }\n\n    //       if (type.type === 'NONE') {\n    //         this.login({ ...this.form, password: encodePass }).then(() => {\n    //           // case click any button from  marketplace , but login yet\n    //           if (this.$route.query.isBack === '1') {\n    //             const name = this.$route.query.name as string\n    //             const type = this.$route.query.type as string\n    //             const id = this.$route.query.id as string\n    //             this.$router.push({ name, params: { type, id } })\n    //           } else if (this.$route.query.isBack === 'nft') {\n    //             const name = this.$route.query.name as string\n    //             const id = this.$route.query.id as string\n    //             this.$router.push({ name, params: { id } })\n    //           } else {\n    //             this.$router.push({ name: 'Wallet' })\n    //           }\n\n    //           message = this.$t('notify.login-success')\n    //           this.$message.success({ message, duration: 5000 })\n    //         })\n    //       }\n\n    //       // this.isLoading = false\n    //     } catch (error: any) {\n    //       this.isLoading = false\n    //       const { data } = error.response\n    //       if (data.status === 'INVALID_CAPTCHA') {\n    //         //@ts-ignore\n    //         this.$refs['recaptcha'].reset()\n    //         this.isVerifyCaptcha = false\n    //       }\n    //     }\n    //   }\n    // })\n  }\n  getMobileOperatingSystem(): string {\n    let userAgent = navigator.userAgent || navigator.vendor\n\n    // Windows Phone must come first because its UA also contains \"Android\"\n    if (/windows phone/i.test(userAgent)) {\n      return 'Windows Phone'\n    }\n\n    if (/android/i.test(userAgent)) {\n      return 'Android'\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent)) {\n      return 'iOS'\n    }\n\n    return 'unknown'\n  }\n}\n"],"sourceRoot":""}]}