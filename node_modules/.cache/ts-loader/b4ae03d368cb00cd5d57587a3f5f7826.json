{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\VerifyPhone.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\VerifyPhone.vue","mtime":1660970151299},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\auth\\views\\VerifyPhone.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport VueRecaptcha from 'vue-recaptcha'\nimport HeaderLogin from '../components/HeaderLogin.vue'\nimport Language from '../components/Language.vue'\nimport { namespace } from 'vuex-class'\nimport countryJson from '@/utils/country/index.json'\n\nimport getRepository from '@/services'\nimport { AuthRepository } from '@/services/repositories/auth'\n\nimport { Component, Vue, Watch } from 'vue-property-decorator'\n\nimport trim from 'lodash/trim'\nimport filter from 'lodash/filter'\nimport includes from 'lodash/includes'\n\nconst apiAuth: AuthRepository = getRepository('auth')\n\nconst bcAuth = namespace('beAuth')\nconst beBase = namespace('beBase')\n\ninterface IListCountry {\n  name: string\n  dial_code: string\n  code: string\n}\n@Component({ components: { VueRecaptcha, HeaderLogin, Language } })\nexport default class VerifyPhone extends Vue {\n  @bcAuth.Mutation('SET_USER_INFO') setUserInfo!: (data: Record<string, any>) => void\n  @beBase.State('urlSystem') urlSystem!: Record<string, any>\n  @bcAuth.Action('setToken') setToken!: (data: Record<string, any>) => Promise<void>\n  isLoading = false\n  listCountry: IListCountry[] = countryJson\n  language = ''\n  selectLanguage = ''\n  phoneDefault = '+84'\n  form: Record<string, any> = {\n    country: '',\n    phone: ''\n  }\n\n  optionLanguage: Array<Record<string, any>> = [\n    {\n      id: 1,\n      lang: 'en'\n    },\n    {\n      id: 2,\n      lang: 'vi'\n    }\n  ]\n\n  rules: Record<string, any> = {\n    country: [\n      {\n        required: true,\n        message: this.$t('validate.wrong-country'),\n        trigger: 'change'\n      }\n    ],\n    phone: [\n      {\n        required: true,\n        message: this.$t('validate.phone-number'),\n        trigger: 'blur'\n      }\n    ]\n  }\n\n  get getDisableBtn(): boolean {\n    return !(this.form.country && this.form.phone)\n  }\n\n  created(): void {\n    this.language = window.localStorage.getItem('bc-lang')!\n    this.selectLanguage = this.language\n    const currentCountry = filter(this.listCountry, country => country.code === 'VN')[0]\n    this.form.country = currentCountry.name\n  }\n\n  handleSelectCountry(country: string): void {\n    this.phoneDefault = filter(this.listCountry, item => item.name === country)[0].dial_code\n  }\n\n  handleChangeLanguage(): void {\n    //@ts-ignore\n    this.$refs['form-phone']?.resetFields()\n  }\n  handleVerify(): void {\n    if (this.getDisableBtn) {\n      return\n    }\n    //@ts-ignore\n    this.$refs['form-phone']?.validate(async valid => {\n      if (valid) {\n        const email = this.$route.query.email\n        const data = {\n          ...this.form,\n          countryCode: this.phoneDefault,\n          email\n        }\n        apiAuth\n          .verifyPhone(data, true)\n          .then(res => {\n            if (includes(this.urlSystem['code.phone.verify.require'], this.phoneDefault)) {\n              this.$router.push({\n                name: 'verify-phone',\n                query: { email, reason: 'VERIFY-SMS', type: 'SMS', country: this.form.country, phone: this.form.phone, countryCode: this.phoneDefault }\n              })\n            } else {\n              this.setToken(res)\n              this.setUserInfo(res)\n              this.$router.push({ name: 'Wallet' })\n            }\n          })\n          .catch(error => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  getMobileOperatingSystem(): string {\n    let userAgent = navigator.userAgent || navigator.vendor\n\n    // Windows Phone must come first because its UA also contains \"Android\"\n    if (/windows phone/i.test(userAgent)) {\n      return 'Windows Phone'\n    }\n\n    if (/android/i.test(userAgent)) {\n      return 'Android'\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent)) {\n      return 'iOS'\n    }\n\n    return 'unknown'\n  }\n\n  //search country\n  @Watch('form.country')\n  clearCountry(value: any) {\n    if (!value) {\n      this.listCountry = countryJson\n    }\n  }\n  remoteCountry(query: string): void {\n    if (query) {\n      this.listCountry = filter(\n        countryJson,\n        country => trim(country.code).toUpperCase().includes(query.toUpperCase()) || trim(country.name).toUpperCase().includes(query.toUpperCase())\n      )\n      // if (currentCountry.length > 0) {\n      //   this.listCountry = currentCountry\n      // }\n    } else if (!query) {\n      this.listCountry = countryJson\n    }\n  }\n}\n"],"sourceRoot":""}]}