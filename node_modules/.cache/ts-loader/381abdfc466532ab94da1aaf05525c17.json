{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\thread-loader\\dist\\cjs.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-3!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\marketplace\\home\\components\\detail-project\\DetailListProduct.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\marketplace\\home\\components\\detail-project\\DetailListProduct.vue","mtime":1660970151645},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1660970364258},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}