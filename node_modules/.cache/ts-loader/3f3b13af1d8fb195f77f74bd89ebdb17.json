{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\components\\layout\\marketplace\\Layout.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\components\\layout\\marketplace\\Layout.vue","mtime":1660970150220},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\components\\layout\\marketplace\\Layout.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport MainSidebar from '../../sidebar/MainSidebar.vue'\nimport MainHeader from '../../header/MainHeader.vue'\nimport BasePageLoading from '../../page-loading/BasePageLoading.vue'\nimport { namespace } from 'vuex-class'\nimport getRepository from '@/services'\nimport ParamsRepository from '@/services/repositories/params'\nconst apiParams: ParamsRepository = getRepository('params')\nimport firebase from '@/utils/firebase'\n\nconst bcAuth = namespace('beAuth')\nconst beBase = namespace('beBase')\n\n@Component({\n  components: { MainSidebar, MainHeader, BasePageLoading }\n})\nexport default class LayoutMarketplace extends Vue {\n  @bcAuth.Action('getInfo') getInfo!: () => Promise<any>\n  @bcAuth.Action('logout') logout!: () => Promise<any>\n  @beBase.State('urlSystem') urlSystem!: Record<string, any>\n  @bcAuth.Getter('isLogin') isLogin!: boolean\n  @bcAuth.Action('setConfigModule') setConfigModule!: (data: Record<string, any>) => void\n\n  // apiUser?: UserRepository\n  isLoading = true\n  selectLanguage = ''\n  timing: any = null\n  isScroll = false\n\n  @Watch('$route.name') watchRoute(name: string): void {\n    const elm = document.querySelector('[role=\"presentation\"]') as HTMLElement\n    if (name !== 'home') {\n      elm!.style.display = 'none'\n    } else {\n      elm!.style.display = 'block'\n    }\n  }\n\n  async mounted(): Promise<void> {\n    try {\n      this.isLoading = true\n      this.selectLanguage = window.localStorage.getItem('bc-lang')!\n      // await this.handleSignInFireBase()\n      if (!this.isLogin) {\n        setTimeout(() => {\n          this.isLoading = false\n          const elm = document.querySelector('.main-center')\n          elm?.addEventListener('scroll', () => {\n            if (elm.scrollTop) {\n              this.isScroll = true\n            } else {\n              this.isScroll = false\n            }\n          })\n        }, 500)\n        const routeName = this.$route.name!\n        setTimeout(() => {\n          const elm = document.querySelector('[role=\"presentation\"]') as HTMLElement\n          if (routeName !== 'home') {\n            elm!.style.display = 'none'\n          } else {\n            elm!.style.display = 'block'\n            // const iframe = elm.querySelector('#_no-clickjacking-0')\n            // //@ts-ignore\n            // iframe!.style.zIndex = '10'\n          }\n        }, 1000)\n      } else {\n        await this.getInfo()\n        const result = await apiParams.getConfigModule()\n        await this.setConfigModule(result)\n\n        setTimeout(() => {\n          this.isLoading = false\n          const elm = document.querySelector('.main-center')\n          elm?.addEventListener('scroll', () => {\n            if (elm.scrollTop) {\n              this.isScroll = true\n            } else {\n              this.isScroll = false\n            }\n          })\n        }, 500)\n        const routeName = this.$route.name!\n        setTimeout(() => {\n          const elm = document.querySelector('[role=\"presentation\"]') as HTMLElement\n          if (routeName !== 'home') {\n            elm!.style.display = 'none'\n          } else {\n            elm!.style.display = 'block'\n          }\n        }, 1000)\n      }\n    } catch (error: any) {\n      this.isLoading = false\n      let message: any = ''\n      const { data } = error.response\n      if (data.status === 'USER_LOCKED') {\n        message = this.$t('notify.user-locked')\n        this.$message.error({ message, duration: 5000 })\n        this.logout().then(() => {\n          this.$router.push({ name: 'login' })\n        })\n      }\n      if (data.status === 'USER_BLOCKED') {\n        message = this.$t('notify.user-blocked')\n        this.$message.error({ message, duration: 5000 })\n        this.logout().then(() => {\n          this.$router.push({ name: 'login' })\n        })\n      }\n    }\n  }\n\n  async handleSignInFireBase(): Promise<any> {\n    try {\n      const data = {\n        password: this.$options.filters?.encryptPassword('#!@Firebase-web-client@!#')\n      }\n      const result = await apiParams.getTokenFirebase(data)\n      await firebase.auth().signInWithCustomToken(result.authToken)\n      return Promise.resolve()\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  // async mounted(): Promise<void> {\n  //   const elm = document.querySelector('.main-center')\n  //   console.log(elm)\n\n  //   setTimeout(() => {\n  //     elm?.addEventListener('scroll', () => {\n  //       if (elm.scrollTop) {\n  //         this.isScroll = true\n  //       } else {\n  //         this.isScroll = false\n  //       }\n  //     })\n  //   }, 500)\n  // }\n\n  destroyed(): void {\n    clearInterval(this.timing)\n    // console.log('destroyed')\n    // window.removeEventListener('scroll', this.handleScrollTop)\n  }\n\n  get getIcon(): string {\n    return this.selectLanguage === 'vi' ? 'flag-vn' : 'flag-usa'\n  }\n  get getRouteLanding(): boolean {\n    return this.$route.name === 'home' || this.$route.name === 'download-app-ido'\n  }\n\n  get getClassMarket(): string {\n    if (this.$route.name === 'MarketPlacePrimary' && !this.isScroll) {\n      return 'header-market'\n    }\n    return ''\n  }\n\n  handleChangeLanguage(lang: string): void {\n    this.$i18n.locale = lang\n    window.localStorage.setItem('bc-lang', lang)\n    location.reload()\n  }\n\n  handleClickTerm(): void {\n    window.open(`${this.urlSystem['system.token.terms']}`)\n  }\n  showButton = false\n  async created() {\n    window.addEventListener('scroll', this.handleScrollTop)\n  }\n\n  handleScrollTop() {\n    this.isScroll = window.scrollY > 10\n    this.showButton = window.scrollY > 1000\n  }\n  handleScrollToTop() {\n    window.scroll(0, 0)\n  }\n}\n"],"sourceRoot":""}]}