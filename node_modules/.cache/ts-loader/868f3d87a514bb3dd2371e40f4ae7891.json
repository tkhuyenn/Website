{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\NEU\\CDTT\\frontend\\Website\\src\\services\\base\\index.ts","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\services\\base\\index.ts","mtime":1660970151750},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\eslint-loader\\index.js","mtime":1660970366946}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6XFxORVVcXENEVFRcXGZyb250ZW5kXFxXZWJzaXRlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxhc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJEOlxcTkVVXFxDRFRUXFxmcm9udGVuZFxcV2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkQ6XFxORVVcXENEVFRcXGZyb250ZW5kXFxXZWJzaXRlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCByZXF1ZXN0IGZyb20gJ0AvcGx1Z2lucy9yZXF1ZXN0JzsKZXhwb3J0IHZhciBCYXNlUmVwb3NpdG9yeSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlQ2xhc3MoZnVuY3Rpb24gQmFzZVJlcG9zaXRvcnkocHJlZml4KSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJhc2VSZXBvc2l0b3J5KTsKCiAgdGhpcy5wcmVmaXggPSBwcmVmaXg7Cn0pOwpleHBvcnQgdmFyIERlZmF1bHRSZXNwb3NpdG9yeSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gRGVmYXVsdFJlc3Bvc2l0b3J5KHByZWZpeCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERlZmF1bHRSZXNwb3NpdG9yeSk7CgogICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRGVmYXVsdFJlc3Bvc2l0b3J5LCBbewogICAga2V5OiAiYWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfYWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHBheWxvYWQpIHsKICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdC5nZXQoIiIuY29uY2F0KHRoaXMucHJlZml4KSwgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHBheWxvYWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZXNvbHZlKHJlc3VsdC5kYXRhLmRhdGEpKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QoX2NvbnRleHQudDApKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgN11dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYWxsKF94KSB7CiAgICAgICAgcmV0dXJuIF9hbGwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFsbDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImZpbmRCeUlkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZmluZEJ5SWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGlkKSB7CiAgICAgICAgdmFyIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QuZ2V0KCIiLmNvbmNhdCh0aGlzLnByZWZpeCwgIi8iKS5jb25jYXQoaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZXNvbHZlKHJlc3VsdC5kYXRhLmRhdGEpKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KF9jb250ZXh0Mi50MCkpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzLCBbWzAsIDddXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGZpbmRCeUlkKF94MikgewogICAgICAgIHJldHVybiBfZmluZEJ5SWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZpbmRCeUlkOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gRGVmYXVsdFJlc3Bvc2l0b3J5Owp9KCk7"},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\NEU\\CDTT\\frontend\\Website\\src\\services\\base\\index.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,OAAP,MAAoB,mBAApB;AAEA,WAAsB,cAAtB,6BAGE,wBAAY,MAAZ,EAA0B;AAAA;;AACxB,OAAK,MAAL,GAAc,MAAd;AACD,CALH;AAQA,WAAsB,kBAAtB;AAGE,8BAAY,MAAZ,EAA0B;AAAA;;AACxB,SAAK,MAAL,GAAc,MAAd;AACD;;AALH;AAAA;AAAA;AAAA,yEAOE,iBAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEyB,OAAO,CAAC,GAAR,WAAe,KAAK,MAApB,GAA8B;AACjD,kBAAA,MAAM,EAAE;AADyC,iBAA9B,CAFzB;;AAAA;AAEU,gBAAA,MAFV;AAAA,iDAKW,OAAO,CAAC,OAAR,CAAgB,MAAM,CAAC,IAAP,CAAY,IAA5B,CALX;;AAAA;AAAA;AAAA;AAAA,iDAOW,OAAO,CAAC,MAAR,aAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAiBE,kBAAe,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEyB,OAAO,CAAC,GAAR,WAAe,KAAK,MAApB,cAA8B,EAA9B,EAFzB;;AAAA;AAEU,gBAAA,MAFV;AAAA,kDAGW,OAAO,CAAC,OAAR,CAAgB,MAAM,CAAC,IAAP,CAAY,IAA5B,CAHX;;AAAA;AAAA;AAAA;AAAA,kDAKW,OAAO,CAAC,MAAR,cALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import { BaseRepositoryInterface, DefaultRespositoryInterface } from './index.d'\r\nimport request from '@/plugins/request'\r\n\r\nexport abstract class BaseRepository implements BaseRepositoryInterface {\r\n  prefix: string\r\n\r\n  constructor(prefix: string) {\r\n    this.prefix = prefix\r\n  }\r\n}\r\n\r\nexport abstract class DefaultRespository<T> implements DefaultRespositoryInterface<T> {\r\n  prefix: string\r\n\r\n  constructor(prefix: string) {\r\n    this.prefix = prefix\r\n  }\r\n\r\n  async all(payload: Record<string, any>): Promise<Array<Record<string, T>>> {\r\n    try {\r\n      const result = await request.get(`${this.prefix}`, {\r\n        params: payload\r\n      })\r\n      return Promise.resolve(result.data.data)\r\n    } catch (error) {\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n  async findById(id: string | number): Promise<T> {\r\n    try {\r\n      const result = await request.get(`${this.prefix}/${id}`)\r\n      return Promise.resolve(result.data.data)\r\n    } catch (error) {\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}