{"remainingRequest":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\mobileSetting\\MobileProfile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\mobileSetting\\MobileProfile.vue","mtime":1660123011570},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\babel.config.js","mtime":1660970148265},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\babel-loader\\lib\\index.js","mtime":1660970387821},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\ts-loader\\index.js","mtime":1660970390648},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660970364629},{"path":"D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js","mtime":1660970394220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\NEU\\CDTT\\frontend\\Website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NEU\\CDTT\\frontend\\Website\\src\\modules\\setting\\components\\mobileSetting\\MobileProfile.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins, Watch } from 'vue-property-decorator'\nimport PopupMixin from '@/mixins/popup'\nimport UploadRepository from '@/services/repositories/upload'\nimport { SettingRepository } from '@/services/repositories/setting'\nimport NftRepository from '@/services/repositories/nft'\nimport countryJson from '@/utils/country/index.json'\nimport forEach from 'lodash/forEach'\nimport filter from 'lodash/filter'\nimport getRepository from '@/services'\nimport trim from 'lodash/trim'\nimport debounce from 'lodash/debounce'\nimport EventBus from '@/utils/eventBus'\nimport { namespace } from 'vuex-class'\nimport PopupChangePassword from '../popup/PopupChangePassword.vue'\nimport PopupConfirmDeleteAccount from '../popup/PopupConfirmDeleteAccount.vue'\nimport PopupVerified from '../popup/PopupVerified.vue'\n\nconst apiNft: NftRepository = getRepository('nft')\nconst bcAuth = namespace('beAuth')\nconst bcBase = namespace('beBase')\n\ninterface IListCountry {\n  name: string\n  dial_code: string\n  code: string\n}\nconst api: SettingRepository = getRepository('setting')\n@Component({ components: { PopupChangePassword, PopupConfirmDeleteAccount, PopupVerified } })\nexport default class MobileProfile extends Mixins(PopupMixin) {\n  @bcAuth.Getter('isLogin') isLogin!: boolean\n  @bcAuth.State('user') user!: Record<string, any>\n  @bcAuth.State('typeLogin') typeLogin!: string\n  @bcBase.State('urlSystem') urlSystem!: Record<string, any>\n\n  apiUpload!: UploadRepository\n  api?: SettingRepository\n  apiNft?: NftRepository\n\n  disable = false\n  userId = this.$store.state.beAuth.user.userId\n  listCountry: IListCountry[] = countryJson\n  listCountry2: IListCountry[] = countryJson\n  phoneDefault = '+84'\n  type2Fa: any = ''\n  fileList3 = ''\n  imgBanner: any = []\n  selfiePhoto = ''\n  isUpload: any = false\n  file: any\n  idPhoto1 = ''\n  dataDetail: Record<string, any> = {}\n  // isUpdate = false\n  dataInput = {\n    idcard: '',\n    // firstName: '',\n    // lastName: '',\n    // nation: '',\n    // idNuidentificationNumbermber: '',\n    // nationality: '',\n    // identificationNumber: '',\n    userId: ''\n    // userGroupId: ''\n  }\n  form: Record<string, any> = {\n    email: '',\n    firstName: '',\n    lastName: '',\n    confirm: false,\n    id: '',\n    avatar: '',\n    displayName: '',\n    birthday: '',\n    address: '',\n    cityName: '',\n    stateName: '',\n    country: '',\n    nationality: '',\n    nationalityCode: ''\n  }\n  address = ''\n  item: Record<string, any> = {\n    value: '',\n    banner: ''\n  }\n  dataUpdate: Record<string, any> = {\n    selfiePhoto: ''\n  }\n  //   @Watch('item.value') saveTabSocial(value: string): void {\n  //     this.saveSocial(value)\n  //   }\n  //  saveSocial = debounce((value: string) => {\n  //     this.query.total = trim(value)\n  //     console.log('nguuuuu');\n\n  //  })\n  data: any = {}\n  tabActive = 'my-profile'\n  query = {\n    total: ''\n  }\n  // imageUrl = ''\n  // bio = ''\n  isShowInfoAccount = true\n  isShowPersonalDetail = true\n  socialInfo: any = {\n    website: '',\n    twitter: '',\n    instagram: '',\n    youtube: '',\n    discord: '',\n    telegram: '',\n    description: '',\n    banner: '',\n    reddit: ''\n  }\n  abc: any = []\n  socialList: Array<Record<string, any>> = [\n    {\n      label: 'Personal website',\n      placeholder: 'https://',\n      url: '',\n      value: '',\n      key: 'website'\n    },\n    {\n      label: 'google',\n      placeholder: 'https://plus.google.com/lynkey',\n      url: '',\n      size: '18',\n      value: '',\n      key: 'google'\n    },\n    {\n      label: 'twitter',\n      placeholder: 'https://twitter.com/',\n      url: '',\n      size: '20',\n      value: '',\n      key: 'twitter'\n    },\n    {\n      label: 'facebook',\n      placeholder: ' https://www.facebook.com/',\n      url: '',\n      value: '',\n      key: 'facebook'\n    },\n    {\n      label: 'youtube',\n      placeholder: 'https://www.youtube.com/',\n      url: '',\n      value: '',\n      key: 'youtube'\n    },\n    {\n      label: 'linkedin',\n      placeholder: 'https://www.linkedin.com/',\n      url: '',\n      value: '',\n      key: 'linkedin'\n    },\n    {\n      label: 'telegram',\n      placeholder: 'https://www.telegram.com/',\n      url: '',\n      size: '20',\n      value: '',\n      key: 'telegram'\n    }\n  ]\n\n  rules: any = {\n    firstName: [\n      {\n        required: true,\n        message: this.$t('setting.profile.wrong-firstName'),\n        trigger: 'blur'\n      }\n    ],\n    lastName: [\n      {\n        required: true,\n        message: this.$t('setting.profile.wrong-lastname'),\n        trigger: 'blur'\n      }\n    ],\n    nationality: [\n      {\n        required: true,\n        message: this.$t('setting.profile.wrong-nationality'),\n        trigger: 'blur'\n      }\n    ]\n  }\n  pickerOptions = {\n    disabledDate(time: any) {\n      return time.getTime() > Date.now()\n    }\n  }\n\n  dataSocialProfile: Array<Record<string, any>> = []\n\n  async showTabSocial(): Promise<void> {\n    this.imgBanner = []\n    const result = await api.showTabSocial()\n    this.address = result.data.address\n    this.socialInfo = result.data\n    const a = result.data.banner\n\n    this.imgBanner = a\n\n    // this.abc =[...this.socialInfo, this.idPhoto1]\n    this.dataSocialProfile = result.data\n    forEach(this.socialList, elm => {\n      elm.value = result.data[elm.key]\n    })\n    this.query.total = result.totalElements\n    // this.socialInfo.description.replace(/\\\\n/g, '<br>')\n  }\n\n  created(): void {\n    const currentCountry = filter(this.listCountry, country => country.code === 'VN')[0]\n    this.form.country = currentCountry.name\n    const currentCountry2 = filter(this.listCountry2, country => country.code === 'VN')[0]\n    this.form.nationality = currentCountry2.name\n    this.apiUpload = getRepository('upload')\n    this.showTabSocial()\n    this.init()\n  }\n  // mounted(){\n  //    console.log(\"this.daf\",this.idPhoto1)\n  //\n\n  remoteCountry(query: string): void {\n    // console.log(query)\n\n    if (query) {\n      this.listCountry = filter(\n        countryJson,\n        country => trim(country.code).toUpperCase().includes(query.toUpperCase()) || trim(country.name).toUpperCase().includes(query.toUpperCase())\n      )\n      // if (currentCountry.length > 0) {\n      //   this.listCountry = currentCountry\n      // }\n    } else if (!query) {\n      this.listCountry = countryJson\n    }\n  }\n\n  handleSelectCountry(): void {\n    setTimeout(() => {\n      this.listCountry = countryJson\n    }, 1000)\n  }\n\n  handleSelectNationality(name: string): void {\n    const country = filter(countryJson, elm => elm.name === name)[0]\n    if (country) {\n      this.form.nationalityCode = country.code\n    }\n    setTimeout(() => {\n      this.listCountry2 = countryJson\n    }, 1000)\n  }\n\n  remoteCountry2(query: string): void {\n    if (query) {\n      const currentCountry = filter(\n        this.listCountry2,\n        country => trim(country.code).toUpperCase().includes(query.toUpperCase()) || trim(country.name).toUpperCase().includes(query.toUpperCase())\n      )\n      if (currentCountry.length > 0) {\n        this.listCountry2 = currentCountry\n      }\n    } else if (!query) {\n      this.listCountry2 = countryJson\n    }\n  }\n  validateForm(): boolean {\n    let profile: any = this.$refs.profile\n    let valid = false\n    profile.validate((_valid: boolean) => {\n      valid = _valid\n    })\n    return valid\n  }\n  // debounce chan doble click\n  debounceFilter = debounce((nameAction: any) => {\n    if (nameAction == 'handleReload') {\n      this.init()\n    }\n    if (nameAction == 'handleSavePersonal') {\n      this.updateProfile()\n    }\n    if (nameAction == 'handleChangePassword') {\n      this.changePassword()\n    }\n  }, 400)\n  handleSavePersonal(): void {\n    const valid = this.validateForm()\n    if (this.isLogin) {\n      if (valid && !this.errorBirhday) {\n        this.debounceFilter('handleSavePersonal')\n      }\n    } else {\n      if (valid) {\n        this.debounceFilter('handleSavePersonal')\n      }\n    }\n  }\n  handleOpenDeleteAccount(): void {\n    this.setOpenPopup({\n      popupName: 'popup-confirm-delete-account',\n      isOpen: true\n    })\n  }\n\n  async handleDeleteAccount(): Promise<void> {\n    const tokenMinDelete = this.urlSystem['system.token.min.delete.user']\n    let accountValidated = false\n    await api\n      .validateAccount()\n      .then(() => {\n        accountValidated = true\n      })\n      .catch((error: any) => {\n        const { status } = error.response.data\n        let message = ''\n        if (status === 'OWNING_NFT') {\n          message = \"You are owning nft, you can't do this function\"\n          this.$message.error(message)\n        } else if (status === 'INVALID_BALANCE ') {\n          message = `Your total balance is more than ${tokenMinDelete}, you can't do this function`\n          this.$message.error(message)\n        }\n        this.setOpenPopup({\n          popupName: 'popup-confirm-delete-account',\n          isOpen: false\n        })\n      })\n    if (accountValidated) {\n      const data = {\n        type: 'EMAIL',\n        email: this.user.email\n      }\n      await api\n        .resendCode(data)\n        .then(() => {\n          this.setOpenPopup({\n            popupName: 'popup-verified',\n            isOpen: true\n          })\n        })\n        .catch(err => {\n          console.log('>>> / file: Profile.vue / line 636 / err', err.response)\n        })\n    }\n  }\n\n  handleSaveSocial(): void {\n    const params = {\n      ...this.socialInfo\n    }\n    apiNft\n      .updateSocialInfo(params)\n      .then(() => {\n        let message: any = this.$t('setting.profile.messSaveProfile')\n        this.$message.success(message)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  updateProfile(): void {\n    console.log('updateProfile')\n\n    api.updateProfile(this.form).then(() => {\n      let message: any = this.$t('setting.profile.messSaveProfile')\n      this.$message.success(message)\n      this.init()\n    })\n  }\n  // saveTabSocial(): void {\n  //   api.saveTabSocial(this.item.value).then(() => {\n  //     let message: any = this.$t('setting.profile.messSaveProfile')\n  //     this.$message.success(message)\n  //     this.init()\n  //   })\n  //   console.log('value', this.dataSocialProfile)\n  // }\n\n  handleReload(): void {\n    this.debounceFilter('handleReload')\n  }\n\n  handleChangePassword(): void {\n    this.debounceFilter('handleChangePassword')\n  }\n  changePassword(): void {\n    const data = {\n      email: this.$store.state.beAuth.user.email,\n      type: 'EMAIL',\n      reason: 'PROFILE_RESET_PASSWORD'\n    }\n    api.resendCode(data).then(() => {\n      this.setOpenPopup({\n        popupName: 'popup-change-password',\n        isOpen: true\n      })\n    })\n  }\n  // setInterval(): void{\n  //   setInterval(this.handleSaveNftProfile, 5000);\n  // }\n  async handleChangeFile(file: any): Promise<any> {\n    if (file) {\n      const formData = new FormData()\n      if (file.status == 'ready') {\n        formData.append('files', file.raw)\n        formData.append('userId', this.userId)\n        formData.append('type', 'AVATAR')\n        this.apiUpload.updateAvatar(formData).then((res: any) => {\n          this.form.avatar = res.success[0].url\n          api\n            .updateProfileAvatar(this.form)\n            .then((res: any) => {\n              let message: any = this.$t('setting.profile.messSaveProfile')\n              this.$message.success(message)\n              this.init()\n            })\n            .catch((error: any) => {\n              this.$message.error(error.message)\n            })\n        })\n      }\n    }\n    const isLt2M = file.size / 1024 / 1024 < 10\n    if (isLt2M) {\n      this.form.avatar = URL.createObjectURL(file.raw)\n      EventBus.$emit('pushAvatar', URL.createObjectURL(file.raw))\n    }\n  }\n  async handleChangeBanner(file: Record<string, any>): Promise<void> {\n    const formData = new FormData()\n    this.socialInfo.banner = file.url\n    if (file.status === 'ready') {\n      this.isUpload = true\n      file.type = file.raw.type\n      // this.fileList3 = []\n      // this.fileList3.push(file)\n      formData.append('files', file.raw)\n      formData.append('userId', this.userId)\n      formData.append('type', 'BANNER')\n      file.percentage = 1\n      const data: Record<string, any> = {}\n      data.data = formData\n      const uid = file.uid\n      const result: any = await this.apiUpload.uploadFile(data)\n      this.fileList3 = result.success[0].url\n      // const index = findIndex(this.fileList3, (item: Record<string, any>) => item.uid === uid)\n      // this.fileList3[index].url = result.success[0].url\n      this.isUpload = false\n    }\n  }\n  remove(): void {\n    this.form.avatar = ''\n    api\n      .updateProfileAvatar(this.form)\n      .then(() => {\n        EventBus.$emit('pushAvatar', '')\n        let message: any = this.$t('setting.profile.messDelete')\n        this.$message.success(message)\n        this.init()\n      })\n      .catch((error: any) => {\n        this.$message.error(error.message)\n      })\n  }\n  async handleSaveNftProfile(file: Record<string, any>): Promise<void> {\n    // this.isUpload = false\n    console.log('this.isUpload', this.isUpload)\n    if (this.isUpload == true) {\n      return\n    } else {\n      if (this.imgBanner === '') {\n        this.socialInfo.banner = ''\n      } else {\n        if (this.socialInfo.banner === this.imgBanner) {\n          this.socialInfo.banner = this.imgBanner\n        } else {\n          this.socialInfo.banner = this.fileList3\n          this.socialInfo = this.dataSocialProfile\n        }\n      }\n      const params = { ...this.socialInfo, banner: this.socialInfo.banner && this.socialInfo.banner.length > 0 ? this.socialInfo.banner : null }\n      apiNft\n        ?.updateNftProfile(params)\n        .then(() => {\n          // this.socialInfo.description = this.socialInfo.description.replace(/\\\\n/g, '<br>')\n          let message: any = this.$t('setting.profile.messSaveProfile')\n          this.$message.success(message)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      // this.socialInfo.description.replace('/\\\\n/g')\n      // console.log('test2222', this.socialInfo.description)\n    }\n  }\n\n  handleLink(): void {\n    this.$router.push({ name: 'Security' })\n  }\n  async handleDetail(): Promise<void> {\n    await api.getProfile().then((res: any) => {\n      this.form = res.data\n      if (!res.data.kycStatus || res.data.kycStatus == 'REJECTED') {\n        this.disable = false\n      } else {\n        this.disable = true\n      }\n    })\n  }\n  async get2fa(): Promise<void> {\n    const params = {\n      email: this.$store.state.beAuth.user.email\n    }\n    await api.get2fa(params).then((res: any) => {\n      this.type2Fa = res\n    })\n  }\n  async init(): Promise<void> {\n    await this.handleDetail()\n    if (this.isLogin) {\n      await this.get2fa()\n    }\n  }\n\n  errorBirhday = false\n  @Watch('form.birthday')\n  checkBirthday(birthday: any): void {\n    if (new Date().getFullYear() - new Date(birthday).getFullYear() >= 18) {\n      this.errorBirhday = false\n    } else {\n      this.errorBirhday = true\n    }\n  }\n}\n"],"sourceRoot":""}]}